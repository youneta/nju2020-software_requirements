


166

Describe the bug

Copy pasting from any source into the currency locks the editor and you cannot clear the editor.
Steps To Reproduce

Open Notepad
Type text "20.83" and copy the text
Open the calculator app and paste the text with Ctrl+V
See that you removing or CE button doesn't clear anything.
Expected behavior

I would expect the editor still continue to edit. Nothing happens after copy paste.
Screenshots


Device and Application Information

OS Build: 10.0.19041.0
Architecture: X64
Application Version: 10.2009.4.0
Region: en-US
Dev Version Installed: false


Additional context

N/A
Requested Assignment

If possible, I would like to fix this.

Copy-pasting result computed by the calculator (5.562684646268003457725581793331e-309) gives "Invalid input":

See also: #1301.

Describe the bug
If you launch Windows Calculator with any mode of Converters that don't support Negative Numbers, then change to temperature or angle converter, the negative button won't pop up. Likewise, if you launch with the temperature or angle mode, that button will not disappear.
Steps To Reproduce
Steps to reproduce the behaviour:

Launch Windows Calculator (be sure that it is on any converter mode that is not angle and temperature)
Change the mode to temperature or angle
See error: the negative button does not appear

Expected behaviour
When you switch modes, the negative button should appear and collapse accordingly.
Screenshots

Left: A instance where the converter was switched to. Right: A new instance of the calculator, already on the temperature page
Device and Application Information

OS Build: Windows Insider 19042.546
Architecture: x64
Application Version: 10.2008.2.0
Region: en-CA
Dev Version Installed: Yes

Requested Assignment
I'm just reporting this problem.  I don't want to fix it.

Describe the bug
The odd/even in function analysis (parity), which indicates odd function/even function (Â•áÂáΩÊï∞/ÂÅ∂ÂáΩÊï∞ in Chinese) is wrongly translated as odd number/even number (Â•áÊï∞/ÂÅ∂Êï∞ in Chinese).

Steps To Reproduce

Go to Graphing Mode
Enter any function
Open Analysis tab
Check out Parity tab in Chinese (Â•áÂÅ∂ÊÄß)


Expected behavior
It should be translated correctly.

Screenshots


Device and Application Information

OS Build: 10.0.19041.0
Architecture: X64
Application Version: 10.2007.1.0
Region: zh-CN
Dev Version Installed: False

Describe the bug
Sometimes, when you view the analysis for a function in Graphing Mode, some items may be too long to show in the analysis window, and are unable to wrap because even a single expression exceeds the width. Therefore, the expression is directly chopped, let the user unable to read the entire expression.
Note that you're still able to copy the entire expression though.

Steps To Reproduce

Go to Graphing Mode
Enter 3x^3+5x^2-7x+1 (for example)
Click on 'Analyze Function'
See error

Expected behavior
The expression for the 3 x-axis interceptions, while long, should be shown completely,

Screenshots


Device and Application Information

OS Build: 10.0.19041.0
Architecture: X64
Application Version: 10.2007.1.0
Region: zh-CN
Dev Version Installed: False


Requested Assignment

I'm just reporting this problem.  I don't want to fix it.

Problem Statement

This is a feature request for improvement of the usability for the usage of common mathematical formulas.
Evidence or User Insights

Users find themselves with issues remembering the correct formula for some common calculations.
For example, take the cross-multiplication (and rule of three), where there's the input of 2 variables to discover the other one.
Proposal

I propose the creation of another side bar item called "Common calculations".
This would open a page with a combo box, showing the names common formulas.
By selecting a formula, such as the Cross-multiplication, speed equation, or mass equation, etc. the bottom part of the UI would display the input boxes where the user could type the values.
By typing the values, the result could be automatically calculated such as:

Goals
User should be able to perform calculations faster, understanding better the results of the formulas.
Non-Goals

Low-Fidelity Concept

Requested Assignment

I'm just suggesting this idea.  I don't want to implement it.

Repro Steps:

Launch Calculator app.
Turn on the narrator.
Navigate Open navigation button and activate it.
Navigate to 'Currency converter' list item and activate it.
Turn On the scan mode and navigate via arrow key to the text "1 USD = 0.8443 EUR".
Observe the issue.

Actual Result:
Narrator announces "1 USD = 0.8443 EUR" information twice in scan mode when focus navigates there.
Expected Result:
Narrator should announce "1 USD = 0.8443 EUR" information only once in scan mode when focus navigates there.

Pre-Requisites:
Expressions should be added.
Repro Steps:

Launch Calculator app.
Navigate Open navigation button and activate it.
Navigate to graphing calculator list item and activate it.
Navigate to Enter a expression edit box.
Enter any expression say "7+8".
Open context menu and activate 'Analyze function' button and activate it.
Analyze function pane will get open.
Now press tab key to navigate to the domain value.
Observe the issue.

Actual Result:
Keyboard focus navigates twice at Domain value "‚ÅÖùë•‚àà‚Ñù‚ÅÜ".
Expected Result:
Keyboard focus should navigate only once at  Domain value "‚ÅÖùë•‚àà‚Ñù‚ÅÜ".

Repro Steps:

Launch Calculator app.
Turn on the narrator.
Navigate Open navigation button and activate it.
Navigate to graphing calculator list item and activate it.
Navigate to Enter a expression edit box.
Enter expression "A+B".
Navigate to the any variable say "B".
Observe the issue.

Actual Result:
Narrator does not announce position number of the variables mentioned in the expression.
For e.g. if focus navigates to 2nd variable which is "B" then narrator is not announcing its position number.
Expected Result:
Narrator should announce position number of the variables mentioned in the expression.
For e.g. if focus navigates to 2nd variable which is "B" then narrator should announce its position number as "2 of 2".

Pre-Requisites:
Expressions should be added.
Repro Steps:

Launch Calculator app.
Turn on the narrator.
Navigate Open navigation button and activate it.
Navigate to graphing calculator list item and activate it.
Navigate to Enter a expression edit box.
Enter any expression say "7+8".
Open context menu and activate 'Analyze function' button and activate it.
Analyze function pane will get open.
Now press tab key to navigate to the domain value.
Observe the issue.

Actual Result:
Narrator does not announce the Domain value "‚ÅÖùë•‚àà‚Ñù‚ÅÜ" when focus navigates there. Narrator just announces "scan off".
Expected Result:
Narrator should announce the Domain value "‚ÅÖùë•‚àà‚Ñù‚ÅÜ" when focus navigates there.

Pre-Requisites:
Expressions should be added.
Repro Steps:

Launch Calculator app.
Turn on the narrator.
Navigate Open navigation button and activate it.
Navigate to graphing calculator list item and activate it.
Navigate to Enter a expression edit box.
Enter any expression say "7+8".
Now open context menu and activate "Remove equation" button.
Observe the issue.

Actual Result:
No confirmation is announced by the narrator after activating 'Remove equation' button.
Expected Result:
Confirmation should be announced by the narrator after activating 'Remove equation' button.

Pre-Requisites:
Expressions should be added.
Repro Steps:

Launch Calculator app.
Turn on the narrator.
Navigate Open navigation button and activate it.
Navigate to graphing calculator list item and activate it.
Navigate to Enter a expression edit box.
Enter any expression say "7+8".
Turn on the scan mode of the narrator by pressing "caps + space" and navigate using arrow keys.
Navigate on the function equation say "f1".
Observe the issue.

Actual Result:
In scan mode narrator focus separately navigates to function number.
If equation "f1" is present then focus separately navigates to complete "f1" and then to number "1".
Expected Result:
In scan mode narrator focus should not separately navigate to function number.
If equation "f1" is present then focus should only navigate to complete "f1" and not to number "1".

Pre-Requisite:
No history should be present.
Repro Steps:

Launch Calculator app.
Navigate Open navigation button and activate it.
Navigate to Scientific calculator list item and activate it.
Navigate to "History" tab item and activate it.
Observe the issue.

Note: Same issue is repro for 'Memory' tab item also. Narrator does not announce ‚ÄúThere‚Äôs nothing saved in memory‚Äù.
Actual Result:
When no history is present there, narrator does not announce ‚ÄúThere‚Äôs no history yet‚Äù
Expected Result:
When no history is present there, narrator should announce the information also as ‚ÄúThere‚Äôs no history yet‚Äù

Repro Steps:

Launch Calculator app.
Navigate Open navigation button and activate it.
Navigate to 'Currency converter' list item and activate it.
Now convert any currency value to another.
Navigate to 'Open navigation' button and activate it.
Now navigate to 'Volume' converter list item and activate it.
Observe the issue.

Note: Issue is repro for all the converters switching from one to another.
Actual Result:
When we switch from currency converter to volume then narrator first announcing the currency info and then volume.
Expected Result:
When we switch from currency converter to volume then narrator should not announce the previous converter information and should only announce the present converter info i.e. volume.

Pre-Requisite:
Number should be stored in memory
Repro Steps:

Launch Calculator app.
Navigate Open navigation button and activate it.
Navigate to Scientific calculator list item and activate it.
Navigate to "Memory recall" button and activate it.
Observe the issue.

Actual Result:
Activating 'Memory recall' button narrator announces information twice. For e.g. If the number "256" is stored in memory then by activating 'Memory recall' button narrator announces information twice.
Expected Result:
Activating 'Memory recall' button narrator should announce information only once.

Repro Steps:

Launch 'Calculator' and turn on narrator.
Home screen will be displayed.‚Äã
Navigate Open navigation button and activate it.
Navigate to graphing calculator list item and activate it.
Navigate to Enter a equation edit box.
Observe the issue.

Actual Result:
Narrator is not reading the already entered equation when focus lands on Enter a equation edit box.
Expected Result:
Narrator should read the already entered equation when focus lands on Enter a equation edit box.

Repro Steps:

Launch 'Calculator' and turn on narrator.
Home screen will be displayed.‚Äã
Navigate Open navigation button and activate it.
Navigate to graphing calculator list item and activate it.
Navigate to zoom controls and activate it.
Observe the issue.

Actual Result:
Narrator is reading the change notification twice after activating zoom controls in graphing calculator.
Expected Result:
Narrator should read the change notification once after activating zoom controls in graphing calculator.

Repro Steps:

Launch 'Calculator' and turn on narrator.
Home screen will be displayed.‚Äã
Navigate Open navigation button and activate it.
Navigate to scientific calculator list item and activate it.
Navigate to "Trigonometry and Function".
Observe the issue.

Note: This repros for all operator panel buttons.
Actual Result:
State is incorrectly defined as On/Off instead of Expanded/collapsed for Trigonometry and Function buttons in programmer calculator.
Expected Result:
State is should not be defined as On/Off. Instead follow standard pattern for menu flyout.

Repro Steps:

Launch 'Calculator'.
Home screen will be displayed.‚Äã
Navigate Open navigation button and activate it.
Navigate to currency converter list item and activate it.
Verify the luminosity ratio of the "Network settings" text via Colour Contrast Analyser tool.
Observe the issue.

Actual Result:
Luminosity ratio for "Network settings" text is 3.6:1 which is less than 4.5:1.
Expected Result:
Luminosity ratio for "Network settings" text should be minimum 4.5:1.
Should use same style as this link:

Problem Statement
Users of Calculator that close the window will lose their history and current calculations forever. After an (automatic) reboot calculator does not restore it's current history and calculations.
Proposal
Let's extend the current state saving that saves the current mode the calculator is in, to also include the history and any current calculations. And restore those in the same way the current mode gets restored.
Goals
Closing a calculator window and opening a new one should be like the user never closed the window in the first place.
Non-Goals
An extended, mode spanning, multi-window history is not the objective here, just restoring the window state as well as possible.
Requested Assignment
If this is something people are interested in, I can try to work on this. But please, anyone that likes this, feel free to take it and run with it.

Problem Statement
Using dots to illustrate an inequality makes the graph visually busy, and my cause discomfort when viewed

Evidence or User Insights
There has been some feedback Feedback Hub about this issue.  Also, from my personal experience, the visual can sometimes be uncomfortable to view.  Here is a quick article about why this happens, "Why do some patterns and stripes hurt your eyes?"
Proposal
Use solid, translucent colors to illustrate inequalities
Goals
The goal is to make graphing inequalities in Windows Calculator more comfortable and appealing
Low-Fidelity Concept

Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Describe the bug

The circles aren't properly graphed. Take a look for yourself :

I got my friends to see that if they see what I see i.e. a circle is being graphed as an oval shape
Steps To Reproduce

Expected behavior

A nice little circle of radius 1 unit to be graphed with center at origin
Screenshots


Device and Application Information

OS Build: Windows 10 build 19041.450
Architecture: X64
Application Version: 10.2007.1.0
Region: en-IN
Dev Version Installed: False

Additional context

Requested Assignment
I'm just reporting this problem.  I don't want to fix it as I don't know anything about fixing this stuff.

It happens quite a lot. The graphing calculator rejects correct equations. For example :

This is the equation of a simple circle and the calculator rejects it. The other day it refused to plot y = sin(x) for me, please fix this quick. It randomly decides not to plot an equation that is correct

Problem Statement

I want to use windows calculator graphing mode as a replacement for other software such as GeoGebra Classic. However, the lack of features in windows calculator does not  permit me  to do so.
Evidence or User Insights

All these features can be done in Geogebra Classic, which is slightly difficult to use. Would be nice if a native windows app could do this. For reference, this is the link to Geogebra Classic: https://www.geogebra.org/classic
Proposal

Is it possible to add support for plotting points (eg: A = (x, y)), drawing all kinds of lines and line segments (eg: perpendicular lines, line segments, rays, etc), and drawing polygons (again, by choosing the vertices).
Goals

Users will be able to plot points of the graph, create polygons and line segments as seen in the popular geometry software GeoGebra classic.
Non-Goals

We are not doing this for drawing with shapes, and drawing for artistic pleasure in graphing mode, mainly for drawing geometric constructions.
Low-Fidelity Concept

Screencast from Geogebra:
https://we.tl/t-SMvIkLkBkF
Requested Assignment

I'm just suggesting this idea.  I don't want to implement it.

Problem Statement
Missing functions like 'Combinations' and 'Permutations' for statistics.
Evidence or User Insights
Functions available usually with advanced calculators.
Proposal
Add a Statistics drop-down which provides the following functions:

 Combination
 Combination with Replacement
 Permutations
 Permutations with Replacement

Goals
User can calculate things nCr and nPr with two values.
Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Problem Statement
The Calculator currently lags behind when we have to do a calculation several times or a calculation involving several steps. For example, suppose I own a company that manufactures plastic buckets. Now we have to calculate the amount of water each bucket holds, given that we have many buckets of different sizes. So I have to calculate the volume of a conical frustum. The formula is as follows:
V((r_1), (r_2)) = 1/3 x œÄ x h x ((r_1)^2 + (r_2)^2 + (r_1)(r_2)), where r_1 and r_2 are the radii of the conical frustum.
Now I have to enter this difficult formula again and again for every bucket size. This is a laborious task. It would have been simpler if the Calculator had allowed me to define my own function and I would just have to pass different values to it for getting the volumes of all the buckets:
V(12, 15), V(10,12) and so on.
And similarly it goes for custom variables which could be used in a number of situations. For example, suppose I wish to use the number 8.85e-12 many times. Now it's difficult for me to type this again and again. It would have been easier if I could assign it to a variable, say œµ = 8.85e-12. Now I can use it as many times as I want.
All we have right now is the Calculator Memory with a few functions ‚Äî M+, M-, MR, MC. It is very limited and it it is very difficult to use them for such tasks.
Evidence or User Insights
As I highlighted above this feature can be really useful when we have to deal with a complex calculation involving several steps or a calculation several times. In short, it enhances a user's efficiency. They don't need to switch to Microsoft ¬Æ Excel in order to get their work done.
Here is what the makers of Excel say on this:

Although Excel includes a multitude of built-in worksheet functions, chances are it doesn‚Äôt have a function for every type of calculation you perform. The designers of Excel couldn‚Äôt possibly anticipate every user's calculation needs. Instead, Excel provides you with the ability to create custom functions.

Courtesy: Microsoft
You can read more here.
But this is not limited to Microsoft Excel. Many of the calculators already have this.
Let's take the example of Desmos Calculator for Android:

Courtesy: Desmos Inc
This limitation has also been noted on the Wikipedia page for Windows Calculator:

It does not provide support for user-defined functions,¬†complex numbers, storage variables for intermediate results (other than the classic accumulator memory of pocket calculators), automated¬†polar-cartesian coordinates¬†conversion, or support for two-variables statistics.

Proposal
The Windows Calculator should support defining custom variables and functions. These should be implemented in such a way that it is easy for the user to define, discover and use them.
Users should be able to define custom functions of the type f(...) with the help of already existing functions.
Some examples are shown below:
f(x) = sin(x) + cos(x)
g(x, y) = xy^2 + yx^2
h(a, b) = (a + b)/2
v(x, y, z) = sin(x) + cos(xy) + sin(z)
The users should be able to use them as follows:
f(œÄ/2), g(1, 2), h(3, 7), v(œÄ/4, œÄ, œÄ/2)
Similarly, the users should be able to define custom variables:
a = 5.71
œï = 1.61803399
Œ± = tan(15)
Now they can use them as follows:
5a - 4œï - 7Œ±
The result should be calculated accordingly.
I guess we will have to make significant changes to the UI in order to implement this.
After the work for the proposed Settings page is complete, we can also have a setting to preserve them so that they don't get lost when we close the Calculator.
Goals

To have support for defining custom variables and functions in Windows Calculator
After the implementation of complex numbers is complete, we can support assigning complex numbers to variables.
For example z = -5 + 7i.

Non Goals

Adding more built-in functions to the Calculator

Low Fidelity Concept
We can implement a third category apart from History and Memory where we can keep all the defined variables and functions. The user should be able to edit previously defined variables or functions.
We can borrow some UI code from the Graphing Calculator. For the new panel that we wish to design, we can take inspiration from the equation input panel of the Graphing Calculator. It can have two sections ‚Äì one for the variables and the other one for functions.

Requested Assignment
I'm just suggesting this idea. I don't want to implement it.

Describe the bug
Some UI elements flipped in graphing mode in RTL

Expected behavior
All text and UI elements respect RTL languages.
Screenshots



Additional context
Reported on Reddit
Requested Assignment
I'm just reporting this problem.  I don't want to fix it.

Describe the bug
Crash occurs upon opening an additional session of Calculator that is not the same size and mode of the current, open session
Steps To Reproduce

Launch a session Calculator in Standard mode with History/Memory panel not displayed
Leave this 1st session open throughout the rest of the steps
Open a 2nd session
Resize the 2nd session to display History/Memory panel
Switch the 2nd session to another mode of calculator such as Scientific
Close the 2nd session
Open a 3rd session
If the mode of the third session reverted to the same mode of the 1st session, change the mode of the 3rd session to the mode that 2nd session was before it was closed
Close the 3rd session
Open 4th a session (if crash does not occur open and close additional sessions)

Expected behavior
Calculator doesn't crash
Device and Application Information

Application Version: 10.2005.23.0

Additional context
Repro rate: 50% to 75%
Requested Assignment
I'm just reporting this problem.  I don't want to fix it.

Problem Statement

When you copy values from the Hex mode in the Programmer's calculator, you copy the values with the spaces included. In most programming languages, hex numbers do not support spaces in between, so you have to manually remove them every time you paste that number in a text editor.
Evidence or User Insights

Popular programming languages don't support spaces in between, for example: C, C++, Python, Rust, etc.
Proposal

When you're copying from the hex calculator, copy the values without spaces.
Goals

User can copy the result values from the calculator without the spaces every word.
Non-Goals

Don't remove the space in the display, they help when reading the value.
Requested Assignment

If the idea is approved, I would like to try to implement this on a time frame, if I can't, I will inform it so a maintainer can take care of the idea.

Problem Statement

We may encounter a situation that we want to save the graph in a picture for use of inserting it into another place. Currently we can do that by snipping the screen, or share it with an email or in OneNote. It's not that convenient if we just want to save a picture. An editable image file (such as svg/emf) will benefit a lot.
Evidence or User Insights

I could remember a product, Microsoft Mathematics, which could save the graphs in emf files.
Proposal

Add a save button above the graph. We could change the file format (in bitmap or vectorgraph) in the pop out window.
Goals

Non-Goals

Low-Fidelity Concept

Requested Assignment

I'm just suggesting this idea.  I don't want to implement it.

Describe the Bug:
The Calculator app crashes when we try to plot the inequality 'x < sin(x)'.
Steps to Reproduce:

Open the Calculator in Graphing mode.
Type 'x' as the first expression.
Type 'x^2' as the second expression.
Type 'x < sin(x)' as the third expression and press Enter.



You will notice that the Calculator app crashes.


Note: The Calculator app is currently unable to plot inequalities of the type:

x < sin (x)
sin(x) < cos (x)
cos(x) < sin(x)

Expected Behaviour:
The Calculator should readily plot these inequalities and should not crash while handling them.
Requested Assignment:
I'm just reporting this problem. I don't want to fix it.

Describe the Bug:
Sometimes we are unable to set focus back to the Calculator after minimizing using the title bar menu. This issue occurs when we are working in the Graphing mode. After opening the app again, we cannot press even a single button.
Steps to Reproduce:
This bug is intermittent. You may have a hard time reproducing this bug; I resetted this app several times in order to record a handful of occurences.
If someone is able to reproduce this, please leave a comment telling your observations so that the maintainers find it easier to debug.

Open the Calculator in Graphing mode.
In the expression box, type an incomplete expression as shown below:

x<

OR
x=

OR
x/

OR
x|


Right-click the title bar and select 'Minimize'.



Restore the app from the taskbar.
You will notice that you are unable to click any button or text field.


Expected Behaviour:
We should have been able to set focus to any button or text field.
Device and Application Info:
OS Build: 10.0.19041.264
Architecture: x64
Application Version: 10.2005.23.0
Region: India (en-US)
Dev-Version Installed: No
Requested Assignment:
I'm just reporting this problem. I don't want to fix it.

Problem Statement
We should make a new icon for dev mode similar to the calculator icon (but with a "Dev" banner on it)
Evidence or User Insights
For consistency, also the terminal dev mode has it.
Proposal
Have a variation of the calculator dev icon but with a dev banner.
Requested Assignment
I'm just suggesting this idea.  I don't want to implement it (I'm not great with image manipulation).

Describe the bug
The Calculator app does not support entering negative exponents. For example, in the Scientific mode, we can enter "2.6e2" produces the expected output 260 but trying to type "2.6e-2" does not give 0.026 as it should. I even tried to put the -2 within parentheses to make sure it understands that the dash symbol is not for subtraction here but even that fails.
Steps To Reproduce

Open the Calculator app in Scientific mode.
Type "2.6e-2" and attempt to calculate it.
The answer reported back is 0.6 instead of the expected 0.026.

Expected behavior
The Calculator app should ideally support entering negative exponents and on typing "2.6e-2" in Scientific mode, it should understand that a dash following an exponent symbol 'e' is not supposed to mean subtraction but a negation.
Screenshots

Device and Application Information

OS: Windows 10 Home Insider Preview Single Language
OS Build: 10 - 0 -20161 - 0 (20161.rs_prerelease.200627-1754)
Architecture: x64
Application Version: 10.2005.23.0

Requested Assignment
I'm just reporting this problem.  I don't want to fix it.

Problem Statement
When working with metric units it's usefull to see scientific notation with exponent divisible by 3. Number 3,3898e-4 is not as clear as 338.98e-6 is clearly 338.98¬µ units.
Evidence or User Insights
You can try "1/2950=" in standard or scientific mode to see result. It was discussed in #226 also.
Proposal
For calculations in metric units it's better to see results in format similar to T, G, M, k, m, ¬µ, n, etc. units.
Goals
User should be able to set exponent divider to make scientific notation easily readable. Default value should by 1 to preserve actual state with ability to enable predefined value 3 (or even other value) to read metric results more easily.
Non-Goals
It's not meant to make any kind of units conversion.
Low-Fidelity Concept
If exp>0 then exp=int(exp/div)*div
if exp<0 then exp=int((exp-div+1)/div)*div
Requested Assignment
If possible, I would like to implement this.

Problem Statement:
The Calculator app only allows the usage of the symbol 'csc' for referring to the cosecant trigonometric function. It would have been better if the symbol 'cosec' was also allowed.
Evidence or User Insights:
Many books and websites use the symbol 'cosec' for it. Here I have quoted some of them:
https://en.wiktionary.org/wiki/cosec
http://www.librow.com/articles/article-11/appendix-a-16
In fact in regions like India, the name 'cosec' is used much more than 'csc'.
Proposal:
I have a simple proposal. Please allow the usage of both 'csc' and 'cosec' in Scientific as well as graphing modes of the Calculator as both terms are synonymous.
Goals:
To have two symbols for referring to the cosecant trigonometric function: 'csc' and 'cosec', so that when we are entering cosec(x) in the graphing calculator it directly related to the cosecant trigonometric function.
Non Goals:
Low Fidelity Concept:
Requested Assignment:
I'm just suggesting this feature. I don't want to implement it.

Describe the Bug:
The Graphing Calculator does not support functions of the type f(y) completely. It shows an error, which says "This function could not be graphed". We need to explicitly specify 'x = ' for it to work correctly. For example, entering 'sin (y)' directly does not work but entering 'x = sin(y)' works correctly.
Significance:
Through graphs, we study the variation of y i.e. function of x with respect to variation in x. For this purpose, we take the variable at the independent axis (usually x-axis) and its function at the dependent axis (usually y-axis). But at  times, we need to study it the other way round.
Let us take the example of y = (sin^(-1) (x)), also known as arcsin(x). This function can be rewritten as x = sin(y). Now we can treat x as a function of y.
Similarly we can have:
x = (y - 3)/(y - 1)
This is particularly useful when we are studying 'Invertible Functions' in mathematics.
Steps to Reproduce:

Open Calculator. Switch to Graphing mode.
Type 'sin (y)' in the expression box and press Enter.

You will see an error stating that this function could not be graphed.


Close all running instances of the Calculator, and then open it again.
Type first expression as 'x = sin (y)' and press Enter.

This time the graphing calculator is able to plot the function.
Expected Behaviour:
The Calculator should support functions of the type f(y) without specifying 'x = ' explicitly.
Device and Application Info:
OS Build: 10.0.19041.264
Architecture: x64
Application Version: 10.2005.23.0
Region: India (EN-US)
Dev Version Installed: No
Requested Assisgnment:
I'm just reporting this problem. I don't want to fix it.

Describe the Bug:
The Graphing Calculator sometimes shows a vague error on entering an expression with invalid spacing. For example, entering 'sinx'in the expression box shows the error: "'i' and 'I' cannot be used as variable names". I don't think this error makes any sense here.
Steps to Reproduce:

Open Calculator. Switch to Graphing mode.
Type 'sinx' in the expression box.

You will see the above error.


Clear the previous expression and type 'sin(x)' and press Enter.

This time the graphing calculator is able to plot the function.
The same thing happens every time when we try to plot the functions given below:
f(x) = sinx + cosx
g(x) = ln(sinx + cosx)
Edit
t(x) = floor(ceiling(x))
u(x) = xsin(x)
In case of the last two functions, this error occurs even if we type these functions with the correct number of parentheses. However, it does not occur when we are using the in-app keyboard.
Expected Behaviour:
The Calculator should correct the spacing automatically and readily plot these functions.
Device and Application Info:
OS Build: 10.0.19041.264
Architecture: x64
Application Version: 10.2005.23.0
Region: India (EN-US)
Dev Version Installed: No
Requested Assisgnment:
I'm just reporting this problem. I don't want to fix it.

Describe the Bug:
The Graphing Calculator sometimes falsely shows the error stating, "The expression is empty".
Steps to Reproduce:

Open Calculator. Switch to Graphing mode.
Copy the following into the Expression Box:

sin x +cos x

OR
sin x+cosx

You may also enter this sequence using your keyboard. But DO not alter the spacing.
Otherwise you may not see the error.
You will see an error stating that the expression is empty.


Close all running instances of the Calculator, and then open it again.
Type first expression as 'sin(x)+cos(x)' and press Enter.

This time the graphing calculator is able to plot the function.
Edit
This error also occurs in case of the following function:
h(x) = sin x/cos x

Expected Behaviour:
The Calculator should readily plot this function.
Device and Application Info:
OS Build: 10.0.19041.264
Architecture: x64
Application Version: 10.2005.23.0
Region: India (EN-US)
Dev Version Installed: No
Requested Assisgnment:
I'm just reporting this problem. I don't want to fix it.

Describe the Bug:
The Graphing Calculator sometimes falsely shows the error stating, "This function is too complex to graph" even when it is capable of plotting it.
Steps to Reproduce:

Open Calculator. Switch to Graphing mode.
Type first expression as 'sin (x)' and press Enter.
Type second expression as 'tan (x)' and press Enter again.

You will see an error stating that the function is too complex to graph.


Close all running instances of the Calculator, and then open it again.
Type first expression as 'tan (x)' and press Enter.

This time the graphing calculator is able to plot the function.
The same thing happens every time when we try to plot the functions given below:
f(x) = log(sin(x) + cos(x))
g(x) = cot(x)
h(x) = csc (x)
p(x) = sec (x)
Expected Behaviour:
The Calculator should readily plot these functions.
Device and Application Info:
OS Build: 10.0.19041.264
Architecture: x64
Application Version: 10.2005.23.0
Region: India (EN-US)
Dev Version Installed: No
Requested Assisgnment:
I'm just reporting this problem. I don't want to fix it.

Describe the bug
Calculator crashes when removing an equation in graphing mode
Steps To Reproduce

Calculator graphing mode
Graph three expressions, for example: x^2 , x^3 , x^4
Edit expression x^2 by clicking on it
Click the 'x' to the right of the expression to clear it
On expression x^3 choose 'Remove equation'
Calculator crashes

Expected behavior
The x^3 expression should be removed leaving an empty expression and x^4
Device and Application Information

OS Build: 10.0.19041.0
Architecture: X64
Application Version: 10.2005.23.0
Region: en-GB
Dev Version Installed: False

Requested Assignment
I'm just reporting this problem.  I don't want to fix it.

Describe the bug
The trace value string in the tooltip when hovering over a graph line is not localized. There are probably different list separators other than comma in different languages, especially when numbers use a comma instead of a period to represent decimals.

  
    
      calculator/src/Calculator/Views/GraphingCalculator/GraphingCalculator.xaml.cpp
    
    
         Line 247
      in
      a3163f6
    
    
    
    

        
          
           traceValueString << "(" << FormatTraceValue(xAxisMin, xAxisMax, newPoint.X).str() << ", " << FormatTraceValue(yAxisMin, yAxisMax, newPoint.Y).str() << ")"; 
        
    
  


Steps To Reproduce

Switch to a different language
Go to graphing mode
Graph a line and hover over to see the trace tooltip, notice it is not localized

Problem Statement

This is a feature request for the Calculator app to support being launched as a Game Bar widget.
Evidence or User Insights

The Game Bar provides a convenient overlay for gaming enhancement utilities without needed to shift focus of leave the context of an active game. There are numerous gaming scenarios in which players may use a calculator, and a Game Bar widget would make that scenario simple and easy.
Proposal

The Calculator app would ingest the Game Bar SDK support being activated as a widget from the context of the Game Bar. This enables gamers to use the calculator in an overlay scenario without needing to alt+tab or change context while gaming.
Goals

Users can choose to launch the Calculator app as a Game Bar widget from the context of the Game Bar widget menu.
Non-Goals

Low-Fidelity Concept

A few experience details:

Graphing mode should be disabled, not hidden, when accessed from GameBar, similar to how we handle the policy that disables graphing functionality. The mode should already be completely hidden on machines running an unsupported version of Windows.
The entry point for "keep on top" in Standard mode should be hidden.
If #596 is completed, we should make a best effort attempt at adopting the GameBar pattern for Settings by hiding the app entry point and surfacing settings in a separate window. If this cannot be done without significant refactoring, we can revisit this at a later date.

Requested Assignment

If possible, I would like to implement this with Design and Review guidance from the Calculator team.

Describe the bug
Typing the '-' character after '>' character in graphing mode alters the > character and fails to graph
Steps To Reproduce

Go to graphing mode
Type in "x >-40"
Notice after you type the '-' character, the > character turns into the ‚âª character

Expected behavior
The equation should read as x>-40, but instead reads as x‚âª40. I am guessing ‚âª is some mathematical character, seems not intuitive that the RichEditBox would make this change. We can possibly update our code to just automatically replace the ‚âª character with a >, but that will still cause the input to eat up the minus sign the user entered.
Screenshots

Describe the bug
Analyze and Equation Options should be available when editing an expression
Steps To Reproduce

Put keyboard focus inside of an equation to enter an expression.
Notice Analyze and Equation options are not available to the user

Expected behavior
Analyze and Equation options should be available when editing an expression.
Screenshots
Actions visible:

Actions unavailable:

Device and Application Information

OS Build: 10.0.19042.0
Architecture: X64
Application Version: 10.2005.23.0
Region: en-US
Dev Version Installed: False

Requested Assignment
I'm just reporting this problem.  I don't want to fix it.

Describe the bug
Sometimes Inflection Points, and Vertical Asymptotes is not calculated for y=tan(x)
Steps To Reproduce

Ensure device has Twitter app is installed and working
Launch Windows Calculator 10.2004.37.0
Navigate to Graphing mode
Input a function/equation such as, "y=tan(x)" into a function input field
Invoke the hover button, Analyze Function, in the function input field (looks like a lighting bolt)
Observe Inflection Points calculation, and Vertical Asymptotes calculation

Observed behavior
The calculation for Inflection Points, and for Vertical Asymptotes is as follows:
Inflection Points: This function does not have any inflection points
Vertical Asymptotes: This function does not have any vertical asymptotes
Expected behavior
The calculation for Inflection Points, and for Vertical Asymptotes is as follows:
Inflection Points: x=ùúãn1, n1 ‚àà‚Ñ§
Vertical Asymptotes: x=ùúãn1+ùúã/2, n1‚àà‚Ñ§
Notes

Sometimes it's on the the Inflection points that's not calculated

Device and Application Information

OS Build: 19644.1000
Architecture: X64
Application Version: 10.2004.37.0
Region: en-US
Dev Version Installed: True

Requested Assignment
I'm reporting this problem.  I don't want to fix it.

Describe the bug
Line color recycling broken for first color when adding a new equation
Steps To Reproduce

Add a couple equations in graphing mode
Delete all equations
Enter a new equation and notice that the color is not the default equation color (blue)

Expected behavior
If all equations are removed, the next equation that is entered should have the default value of blue.

Repro Steps:

Launch "Calculator" app.
Home screen will be displayed.
Navigate to menu button and activate it.
Navigate to "Graphing" list item and activate it.
Navigate to 'Enter an expression" edit box.
Open the context menu.
Observe the issue.

Actual Result:
"Cut", "Copy", "Paste" and "Select all" buttons are not disabled even if user is unable to perform action on them.
Expected Result:
"Cut", "Copy", "Paste" and "Select all" buttons should be disabled if user is unable to perform action on them.

Repro Steps:

Launch "Calculator" app.
Home screen will be displayed.
Navigate to Menu button and activate it.
Navigate to "Graphing" list item and activate it.
Navigate to "Equations" list items.
Observe the issue.

Actual Result:
Narrator does not read the position number of the equation when user navigates to equation in tab mode.
Expected Result:
Narrator should read the position number of the equation list item when user navigates to equation in tab mode.

Repro Steps:

Launch "Calculator" app.
Home screen will be displayed.
Navigate to menu button and activate it.
Navigate to "Graphing" list item and activate it.
Navigate to "Graph options" button and activate it.
Navigate to "Reset view" link.
Verify the luminosity ratio of "Reset view" link via Colour Contrast Analyser tool.
Observe the issue.

Actual Result:
Luminosity ratio for "Reset view" link text is 3.7:1 which is less than 4.5:1.
Expected Result:
Luminosity ratio for "Reset view" link text should be minimum 4.5:1. Due to the background of the flyout, we should leverage a darker accent color variant on light theme and a lighter variant on dark theme.

Repro Steps: ‚Äã‚Äã

Launch "Calculator" app and turn on narrator.
Home screen will be displayed.‚Äã
Navigate to Menu button and activate it.‚Äã
Navigate to "Graphing" calculator and activate it.‚Äã
Navigate to "Grid options" button and activate it.
Check the name property via "Accessibility insights" tool.
Observe the issue. ‚Äã

Actual Result:‚Äã
Name is not defined for the Grid options pop up.
Expected Result:‚Äã
Name should be defined for the Grid options pop up.

Repro Steps:

Launch "Calculator " app and turn on narrator.
Home screen will be displayed.
Navigate to menu button and activate it.
Navigate to "Graphing" list item in scan mode.
Observe the issue.

Actual Result:
Narrator focus goes thrice on "Graphing" list item in scan mode.
Expected Result:
Narrator focus should go once on "Graphing" list item in scan mode just as other list items.

Repro Steps:

Launch Calculator
Set to Standard mode
Select AoT button
Make AoT window as large as it can be
Move Calc window to one side of the monitor
Resize diagonally off screen

Observed Results:
Calc window can be moved off screen, hovering over the icon in the task bar shows a black screen
Expected Results:
Calc window can't be re-sized into a state where the window cannot be interacted with

Describe the bug
When in Tablet Mode, the Calculator's interface slides down to show titlebar instead of overlaying the titlebar on top.
Steps To Reproduce
Start Calculator in Tablet Mode, try to access the Title bar at the top of the screen, when the title bar appears, the entire interface slides down.
Steps to reproduce the behavior:

Star Calculator while in Tablet Mode'
Access the Title Bar which is hidden at the top the screen.
See the entire interface slide down.

Expected behavior
The interface should display the Title Bar over the interface.
Screenshots


Device and Application Information


OS Build: 10.0.19592.0


Architecture: X64


Application Version: 10.2001.41.0


Region: en-US


Dev Version Installed: False


OS Build: 10.0.19592.0


Architecture: X64


Application Version: 10.2001.41.0


Region: en-US


Dev Version Installed: False
Additional context



Requested Assignment

I'm just reporting this problem.  I don't want to fix it.

Problem Statement
This calculator does not have ability to compute uncertainties in precise measurements. Scientists/researchers need these to compute very precise measurements.

Evidence or User Insights
This would help scientists/researchers/even high school science students with their measurements.

Proposal
Create a function/mode that will allow users to input the uncertainties needed for the calculations (absolute/relative)



Low-Fidelity Concept

For example:
When multiplying absolute uncertainties:
(A +- deltaA)  (B+-deltaB) = (A timesB) +- (deltaA/Atimes100%+deltaB/Btimes100%)
(0.050 +-0.001)  (9.81 +-0.01) = (0.050+- 9.81)  (0.001/0.050 times100% + 0.01/9.81 times100%)
= (0.050+- 9.81) +-(2.0000% + 0.10194%)
= (0.050 9.81) +- (2.10194%)
= (0.4905) +- (2.10194%)
= (0.4905) +- (0.010310)
= (0.49) +-  (0.01)
This feature would also have to be linked with significant digits, because uncertainties and sigfigs are closely related.
Requested Assignment

I'm just suggesting this idea.  I don't want to implement it.

Repro Steps:

Launch 'Calculator'.
Home screen will be displayed.‚Äã
Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.‚Äã
Navigate to the Expand icon button below sliders.
Verify the luminosity of the Expand icon button using color contrast analyzer tool.
Observe the issue.

Actual Result:
Luminosity ratio for 'Expand' icon button is 2.4:1 which is less than 3:1.
Expected Result:
Luminosity ratio for 'Expand' icon button should be minimum 3:1.

Repro Steps:

Launch 'Calculator'.
Home screen will be displayed.‚Äã
Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.‚Äã
Navigate to 'Grid Options' button and activate it.
Graph options pop up will open.
Navigate to edit field and fill incorrect value.
Verify the luminosity of edit field using color contrast analyzer tool.
Observe the issue.

Actual Result:
Luminosity ratio for edit field boundary is 2.8:1 which is less than 3:1 after filling incorrect value in edit field.
Expected Result:
Luminosity ratio for edit field boundary should be minimum 3:1 after filling incorrect value in edit field. To achieve this, we should not update the background color of the textbox and leverage SystemControlErrorTextForegroundBrush as the border color.

Repro Steps:

Launch 'Calculator' and turn on narrator.
Home screen will be displayed.‚Äã
Navigate through Menu using keyboard and select 'Graphing'. 'Graphing' Calculator opens.‚Äã
Navigate to 'Inequalities' and 'Function' combo boxes.
Observe the issue.

Actual Result:
Narrator focus goes twice on 'Inequalities' and 'Function' combo boxes in scan mode.
Expected Result:
Narrator focus should go once on 'Inequalities' and 'Function' combo boxes in scan mode.
Note:
Issue is repro throughout the app. Same issue is repro in item mode.

Describe the bug
crash
Steps To Reproduce

open Calculator
select programmer
dec numbers
calculate 1 << 63 (press 1, press LSh, press 6 and 3, press =)
press minus
press 1
press =
(so, you calc (1<<63) - 1)
select result
right click
select all
right click
copy
CRASH!

Device and Application Information
Microsoft Windows [Version 10.0.18363.693]
Requested Assignment
I'm just reporting this problem. I don't want to fix it.

Problem Statement

A major use in defining functions is for using them to define further functions. This would be useful for visualising, explaining and manipulating composite functions, a major concept in mathematics that spans all disciplines, and is often a barrier for students. Currently, we cannot refer to previously defined functions when defining new ones in graphing mode; the function names are treated as constants.
Evidence or User Insights

Implementing this would enable students and users of the graphing calculator to define functions in terms of other existing functions. This is presently a feature on most, if not all, competitor apps, such as Desmos, GeoGebra and handheld graphing calculators, and is an important way to quickly define families of functions and view them simultaneously.
Currently, if we define the function with rule  and attempt to define ,
we get a slider for "f_1" appearing, set to 1, which means it is treated as a constant, and what is displayed for  is really the graph of , where . This would not be expected behaviour. See this for current behaviour:

Proposal

Say we have defined, as above, the function with rule . Then if we define , the calculator realises that  refers to "3 times  composed with the exponential function" is the intended interpretation.
Then the result that is graphed is that of , as one would expect.
To help achieve this, it would also be good to allow for functions to be named something other than just  for positive integers k; for instance, the letters f, g, h, p, q, r etc. could be interpreted as function names in the right context, where they haven't been previously assigned as a constant.
Functions could also be renamed by clicking on the function name after entry. (Another wish is that you would be able to save/share a graphing screen for later use to an editable file, but that's for another suggestion.)
Goals


The user should be able to define new functions in terms of existing functions, and they should be treated as function compositions, as expected.
These function names should be treated as such, and not as constants when used in defining new functions. However, existing/new constants should still work when defining functions in this new way, and graphs should update as required.
Allow for usage of different letters for function names, so that it is easier to refer to previously defined functions.
(Eventually, for better sharing capabilities, it should be possible to export a graphing screen to a format that can later be edited again in the Calculator app, so that complicated graph visualisations can be retained, interacted with and shared.)

Low-Fidelity Concept

See the Desmos implementation:

Of course, the existing Calculator UI would be retained, but with the graphing output as in the screenshot. This is a mock-up in the Calculator app, but with the desired output of  defined manually in :

Requested Assignment

I'm just suggesting this idea.  I don't want to implement it.

Problem Statement

After noticing the new features of the Calculator, I saw there are many conversion options.
The angular one got my attention, which now converts between degrees, radians and gradians.
There is another unit that is often used for angles, which is the grade (or slope).
Eventhough this is not used for all angles, it is quite common in usage and people often misinterpret the meaning. Was it 18 degrees or percent?
In addition to the earlier ideas in #243 and #515, this should in my eyes be considered as well.
While #243 will probably be absorbed in #515, the solution to this proposed feature request is much simpler and can be done swiftly without having to wait for the implementation of #515.
Evidence or User Insights

Yes, I dare use Wikipedia as a source:

In Europe and the U.S. percentage "grade" is the most commonly used unit for describing slopes.
Source

Of course, the unit is well known (and even used when describing linear graphs).
Proposal

By adding Grade (or Slope) in percent to the options for angles, it is easier to convert angles from/to grades
People can either get easier understanding of the meaning or simply convert between the units without a problem!
Goals

User can easily and without errors convert between grade (slope) in percent and degree, radian or gradian.
Non-Goals


Including many forms of grade (percent, per mille, ratio).
As shown in the Evidence, percentage is most used in both Europe and the U.S.A.
Including other units that are used infrequently or ill-defined, such as military mils.

Low-Fidelity Concept

Conversion is simple and easy.

d = run
Œîh = rise
l = slope length
Œ± = angle of inclination
Given this example , there is an easy way to determine the grade percentage  (Œîh/d * 100)
There are also several ways to determine the angle (Œ±), by using the cosine, sine or tangent.
The way to convert the inclination angle (Œ±) to grade percentage would be to take the tangent of the angle (Œ±). and multiplying with 100
For an angle greater than 90 degrees, the slope is ill-formed, but it could still be defined if the angle is taken modulo 90.
Seeing as the implementation is easily done, there is no need to wait for implementation of #515 for adding this conversion
In short, the conversion is easily implementable by taking the tangent of the input and multiplying by 100, or dividing by 100 and then taking the arctangent. Ofcourse, an exception is 90 degrees, where the slope grade is infinity, but that can easily be filtered.
Requested Assignment

If possible, I would like to implement this.

A team member will update this issue with more details soon.

A team member will update this issue with more details soon.

Describe the bug
Buttons on top of the graph can be distracting.
Expected behavior
Buttons on top of the graph should appear on graph hover/interaction before fading away after inactivity. Should not be too aggressive.

Describe the bug
You can paste images into equation input.
Expected behavior
Shouldn't be able to do that.
Screenshots

Describe the bug
Share output shows equations in linear math output format.
Expected behavior
Math expressions should be rendered richly as MathML style.
Screenshots

A team member will update this issue with more details soon.

Problem Statement
Users cannot plot points on the graph today, only expressions.
Proposal
Add support for plotting coordinate pairs as points (e.g., P1 = (3,5))
Goals
Users can plot (x,y) coordinate pairs.
Low-Fidelity Concept

Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

A team member will update this issue with more details soon.

Describe the bug
There is a disconnect between the style picker popup and the context menu for equations.
Expected behavior
Context menu should appear as a cascading menu flyout:

Screenshots

Summary
Rich editing for exponents becomes broken following a close parenthesis when parentheses are added later while input an equation
Repro Steps

Launch calculator in graphing mode.
In a function data entry field, start to input an equation such as: x^2+y^2‚àí1. To input an exponent: press [Shift] + [6] > press exponent number of choice > then press spacebar
Add an open parenthesis in front of the x: (x2+y2‚àí1
Add a closed parenthesis in behind the 1: (x2+y2‚àí1)
Add an exponent to closed parenthesis
Observe the exponent

Observed results
The rich text edited version of the exponent is not added to the closed parenthesis.  As the function is written out more, the rich text version any additional exponents is broken as well.
E.g. (x2+y2‚àí1)^3 -x^2 y^3 = 0
Expected results
E.g.

Note
Exponents might be a red herring. I think it has to do with the adding parenthesis after the fact

Repro Steps

Launch Narrator.
Launch Calculator app.
Navigate to 'Open Navigation' button and activate it.
Navigate to 'Temperature' menu item and activate it.
'Temperature' calculator mode will open.
Set narrator to scan mode using 'Caps+Space' keys.
Navigate in the to 'Temperature' calculator mode window using 'Up/Down arrow' keys.

Observe the issue.
Actual Result
In Scan/Item mode, screen reader focus navigates to background hidden element 'Not busy...' progress bar while navigating from 'Convert From...' text to 'Main' landmark.
Expected Result
In Scan/Item mode, screen reader focus should not navigate to background hidden element 'Not busy...' progress bar while navigating from 'Convert From...' text to 'Main' landmark.

Repro Steps

Launch " Calculator " app.
Launch Narrator.
Navigate to "Scientific" control in the navigation pane and activate it.
Turn on the scan mode of the narrator by pressing 'Caps + space" key.
Now navigate using down arrow key to 'Functions' button.

Observe the issue.
Actual Result
In scan mode, focus navigates twice to function button.
Expected Result
In scan mode, focus should navigate only once to function button.
Observation
For all the other buttons focus is navigating correctly only once.

Describe the bug
When using Graphing mode with Narrator, Narrator announces the state of the graph/equation mode toggle switch twice after the switch is used to change modes.
Steps To Reproduce


Go to Graphing Mode
Ensure window is in the condensed form that shows either the graph or equations, but not both.
Turn on Narrator and navigate to the mode change toggle switch.
Activate the switch to change modes
Narrator announces, "Current mode is [Graph | Equation] mode. Switch to [Equation | Graph] mode, toggle switch [off | on]. Switch to [Equation | Graph] mode, toggle switch [off | on]."

Expected behavior
Narrator should only announce the "Switch to..." string once when changing formats.
Screenshots

Device and Application Information

OS Build: 10.0.19547.0
Architecture: x64
Application Version: 10.1912.4.0
Region: en-US
Dev Version Installed:


Additional context

Requested Assignment

I'm just reporting this problem.  I don't want to fix it.

Problem Statement
Add support to the new graphing mode to plot parametric equations.
Goals
Allow for plotting equations in the form x=f(t), y=g(t)
Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Problem Statement
Allow for the plotting of complex numbers and loci in an argand diagram
Evidence or User Insights
This would be greatly beneficial to students learning about complex numbers. This is part of the further maths syllabus for high school students in the UK, I am not sure about other countries.
Goals
Allow for plotting of complex numbers and loci in the form

x+iy
re^iŒ∏
|z|=r
|z-(a+bi)|=|z-(x+iy)|

Non-Goals
Non-goals include things such as visualisation of transformations of the complex plane.
Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Problem Statement
It would be nice to have a mode that allows the plotting of graphs in 3d that would allow for the plotting of lines in the form of f(x)=g(y)=h(z) as well as the plotting of two-variable functions such as z=f(x,y).
Evidence or User Insights
This would help with visualisation and understanding of the 3d coordinate system as well as multivariable functions.
Goals
Allow the plotting of equations in the form

f(x)=g(y)=h(z)
z=f(x,y)

Non-Goals

Spherical coordinate system
Plotting of vector fields
Visualisation of functions with more than two variables

Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Problem Statement
The graphing mode is not able to plot polar curves in the form r=f(Œ∏)
Goals
Allow users to input an equation in the form r=f(Œ∏)
Non-Goals
Spherical coordinates
Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Calculator version 10.1906.51.0 starts up about 40ms faster than more recent versions.
The main reason for this regression is that 1906 uses WinUI version 2.0, while later versions use WinUI 2.1 or 2.2. This is convenient to verify because the last commit in the 1906 branch switches to WinUI 2.0 instead of 2.1.
How to measure

Build the Calculator app in the x64 Release configuration
Deploy the app locally using Visual Studio
Use my MeasureAppStartupTime tool to repeatedly start the app and measure how much time it takes to reach the "UIResponsive" event. MeasureAppStartupTime.exe -n 30 Microsoft.WindowsCalculator.Dev_8wekyb3d8bbwe!App
Report the average time after 30 launches

Results

Commit 5dcfdd4 (WinUI 2.0): 371ms
Commit 9b7834f (WinUI 2.1): 419ms

I tested on a fairly high-end Core i7-8700 desktop running Windows 10 Insider Preview Build 19546. The absolute performance difference is different on different machines, but the relative difference is always measurable.
Requested assignment
Help wanted.

Repro Steps

Set up an InTune group, profile, policy, and assign the policy to the profile
In the "Add work or school" user settings, add the profile created in step 1 with the InTune policy applied
Launch calculator with graphing mode
Try to access graphing mode

Observed Results
Graphing calc can still be accessed on Windows 10X
Expected Results
Graphing calc option is grayed out like it is on desktop

Calculator is a great project for developers starting with UWP. However, it is implemented in C++ with managed extensions which I would consider rather a niche language with a niche features in a niche area of UI development. It is a niche within a niche within a niche.
I know C++ but would never consider this language for UI development. This ship has sailed around year 2000. On the other hand if Microsoft would pay me a huge salary to develop UI apps in C++ I would seriously consider it. Then I would say no.
Having calculator project in  C# would make this project accessible to a much wider audience and maybe would help adoption of UWP somewhat.
Please consider converting this project to C#. Future generations would thank you for it.

Problem Statement

Doing a multiple conversions than using those in calculations requires switching back and forth between "calculator mode" and "conversion mode." This wastes a lot of time, especially when one needs to frequently do calculations using mixed units.

For instance, regularly working in feet+inches while needing to do calculations with metric formulae.
Evidence or User Insights
My personal use involves heavy use of the conversion panel, which usually eventually entails doing calculations with those numbers. Typically, converting imperial measurements into metric, then using those converted values in various formulas or comparing to standards.
Proposal
Have an option that opens the conversion panel on the side instead of in place of the calculator. The fact that the old windows calculator did this was one of the reasons I used it for so long.
Goals
User can perform conversions and keep them visible while doing other calculator tasks that may or may not involve those comparisons.
Low-Fidelity Concept
This calculator, and the conversion panel, have some strong improvements over the old calculator. Especially the fact that conversions can go both ways. I really appreciate that. However the fact that the conversion panel and the calculation panel are now mutually exclusive is a downgrade.
Requested Assignment
I'm just suggesting this idea.  I don't have the ability to implement it.

I was really surprised that there is no support for basic financial formulas in standard Windows calculator. I tried to look for any relevant Github issues but couldn't find any.
Proposal
Create a basic "compound interest rate calculator" with or without payments.
Goals
In a basic case, allow the user to compute one of principal/interest rate/term/total given the other three values.
Requested Assignment
I would like to help implementing this feature.
If there is an interest in this, I can create a normal spec with wireframes.

When text scaling is applied, text is not getting resized in Length Converter pane
Repro steps:
1.Launch the calculator application from start menu.
2.Navigate to  menu navigation button present in left corner if the app and invoke it.
3.Now select the length option under Converter pane and invoke it.
4.Length Converter page, select ‚Äúkilometers‚Äù as the unit type in the input field and input ‚Äú5‚Äù  and navigate to the Output values now observe the "about equals to values" text size in Textscaling 200%. mode.
Actual Results
In Length converter pane "About equals text" and "Displayed value" text is not enlarged after applying 200 % textscaling.
Expected Results
Text size should be increased when Text scaling is applied
User Impact
Users with low vision will face difficulty if the text is not getting increased.

Describe the bug
Clicking on the History Label causes the [Shift] + [Ctrl] + [D] hotkeys to break
Steps To Reproduce

Launch Windows Calculator
Ensure the window is sized large enough so that the History panel is viable
Perform a calculation

E.g. 4*5/6=
A history item should populate the history panel


Click on the "history" pivot button.
Try to use [Shift] + [Ctrl] + [D] to clear history.
See error

Observed behavior
Using the [Shift] + [Ctrl] + [D] hotkeys has no impact; nothing appears to happen when the keys are pressed
Expected behavior
Using the [Shift] + [Ctrl] + [D] hotkeys clears the history panel
Screenshots

Device and Application Information

OS Build: 10.0.19505.0
Architecture: X64
Application Version: 10.1909.1.0
Region: en-US
Dev Version Installed: True

Additional context

This caused my automated test to fail, but it took manual testing to figure out why this hotkey function broke
Once this function breaks, it stays broken until the application closed and relaunched
The history label is naturally clicked when navigating between Memory and History, so this issue could impact users who switch between Memory and History and then want to use the hotkeys to clear the history panel

Requested Assignment
I'm just reporting this problem.  I don't want to fix it.

Visual Studio's code analysis tools can help find issues in our C++ code. Eventually, it would be great to have these tools running in all of our builds and to fix all the warnings they generate.
See #689 for an example of how to enable the tools during the build. We'll enable code analysis only in the "Release" configuration to avoid slowing down Debug builds.
To see which warnings still need to be fixed, check a recent build from the master branch.
It would be best to submit fixes for unrelated warnings as separate PRs. I'll close out this issue when 1) all C++ projects are building with code analysis rules on and 2) all the warnings generated by those tools are fixed or silenced.

Problem Statement

The conversion between these three is done very often in chemistry-related workloads. As a result, there are multiple online calculators dedicated for this where you can input one and get the other two out. This behavior can still be adapted for the input one-output one that already exists in this calculator. This also fits with HS-PS4-1 of the common core. This is also part of basic college chem classes.
Evidence or User Insights


Proposal

Add a converter for photon energy
Low-Fidelity Concept




Requested Assignment

I'm just suggesting this idea.  I don't want to implement it.

Describe the bug
'Always on Top' button disappears if there are multiple sessions open on a device with low processing power
Steps To Reproduce

Launch calculator on a VM or device with low processing power
Repeat step 1 about 10 times
Observe how many sessions have an 'Always on Top' button

A few sessions do not have an 'Always on Top' button and the UI can shift down slightly.
Expected behavior
'Always on Top' button always appears regardless of processing power
Screenshots
Needed
Device and Application Information

OS Build: 10.0.18970.0
Architecture: X64
Application Version: 10.1907.24.0
Region: en-US
Dev Version Installed: True

Requested Assignment
I'm just reporting this problem.  I don't want to fix it.

Problem Statement
Significant figures (also called significant digits) are an important part of scientific and mathematical calculations and deals with the accuracy and precision of numbers. It is important to estimate uncertainty in the final result, and this is where significant figures become very important. (from Wikibooks Chemical Engineering) They're typically used from high school science to college classes these days and are used often in engineering settings. It is also part of a common core standard as per http://www.corestandards.org/Math/Content/HSN/Q/ (a.k.a. HSN-Q.A.3), so it is arguably notable enough to support.
Evidence or User Insights

There are all sorts of significant figures calculators out there already:

The sheer number of results alone shows the demand for it.
Proposal

Add support to the existing scientific calculator mode to use significant figures in calculations, or add a separate mode for making calculations with significant figures.
Goals


Support US common core math curriculum
Provide a great baseline significant figures-driven calculator experience in Windows Calculator

Low-Fidelity Concept



User Cans

Compute using significant figures when using the four operations, square roots, logarithms, and other functions. (all of the aforementioned have special rules)

Requested Assignment

I'm just suggesting this idea.  I don't want to implement it.

Describe the issue
Instead of using the same control than in Normal mode to display the current value, AOT use a different control based on OverflowText.
This control wasn't made for this purpose, we should use the same control in both modes (cleaner, providing more features and easier to support).
Originally, the Calculator had 2 similar controls:


CalculationResult

Purpose: Display a numeric value or an error message
Usage: Display the result of a calculation or the current value entered
Unique features: Support auto font resizing, made to host a textblock, support left/right keys to scroll, support error messages, including change the font to correctly display the message, support LtR for error messages, support context menu (copy/paste the value)
The control scrolls automatically to the end when the value changed (to replicate this behavior, OverflowText modified the VM and misuse TokenUpdated )



OverflowText

Purpose: Display a ItemsControl
Usage: Display the current operation (e.g.: 123 + 243 x 343)
Unique features: improve the accessibility of the containing ItemsControl.



It is very clear when we compare the 2 controls that the first one corresponds exactly to our needs unlike the second. The current implementation tries to adjust/tweak the style of OverflowText to look like CalculationResult, instead we should use it directly.
How will we improve the code quality and the UX?
Using the CalculationResult will effortlessly add the following features to AOT:

better sizing of the text, the current implementation (via visual states in Calculator.xaml) only uses 2 font sizes, a large and a very small one (see screenshots)
support of Left/Right keys
better display of error messages (a comment from this repository mentions that we should improve this point in AOT mode, switching to CalculationResult will solve the problem)
Support copy/paste via context menu.
All future enhancements to the normal view will be added automatically in AOT mode.
We will be able to improve the display of the operation without impacting AOT mode.
slightly better performance, only 1 control instead of 2 will be used to display results
remove huge template from Calculator.xaml, making the code easier to read.
improve transition between the 2 mode, a text selected in one mode will still be selected in the other.

Screenshots

The current implementation supports only 2 font sizes, not adapted to all the sizes supported by AOT

The display of error messages can be improved
What do we need to do?

Add the ScrollButtonsPlacement="Above" mode added by #647 in OverflowTextBlock to CalculationResult. (will it be necessary if the control auto-resizes the font?)
Remove AlwaysOnTopStyleS, AlwaysOnTopStyleM and AlwaysOnTopResults from Calculator.xaml
in visual states associated to AOT, set the correct values for Result.MinFontSize, Result.MaxFontSize to perfectly fit the AOT UI.

Device and Application Information

OS Build: 10.0.18875.0
Architecture: X64
Application Version: 10.1905.30.0
Region: en-US
Dev Version Installed: True

Requested Assignment
If possible, I would like to fix this.

Describe the bug
When in high contrast mode the About menu item once selected can never be unselected.
Steps To Reproduce
When in high contrast mode the About menu item once selected can never be unselected

In high contrast mode open the calculator
Click on the About in the drop down menu
Try unselect in or get rid of the highlighting

Expected behavior
High contrast color is applied appropriately
Screenshots

Device and Application Information

OS Build: 10.0.18942.0
Architecture: X64
Application Version: 10.1906.53.0
Region: en-US
Dev Version Installed: True

Requested Assignment
I'm just reporting this problem.  I don't want to fix it.

Problem Statement
Today, when you input an expression, you are committing previous input with each operator, which means that you cannot easily edit or undo what you have already committed. We also have a key mapping such that keyboard keys are mapped to specific button inputs. This means that to enter "cos()", you actually press o. This is unintuitive and makes entering equations difficult.
We also currently only support linear input, which means we display this:
x ^ 2 + ‚àö(2x)
instead of this:

Evidence or User Insights
Our current keyboard mapping is unintuitive and requires extensive documentation to educate users (#157). Not only is free-form input more intuitive, there have been several issues opened that would require support for it as a pre-requisite (e.g., #163, #519, #150).
Proposal
Enable free-form input across calculator modes, which means that users can place the cursor anywhere inside of an equation input box to edit the expression. This also means that users can type or paste in "cos(x)", which feels natural, as this is how you would write this expression up on a whiteboard.

Note: This is the same input behavior that we are going to have in graphing mode.

Goals

Users can input their equations with free-form input
Expressions are displayed in rich MathML styling format

Non-Goals

Build a parser (this is covered by #526, which is a prerequisite for this work)
Introduce new input methods other than keyboard (e.g., inking input is covered by #24)

Low-Fidelity Concept

Just an example of rendering as MathML
Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Problem Statement
Windows Calculator currently does not support imaginary numbers. Instead, we show "Invalid input":

Evidence or User Insights
The complex number system is part of US high school common core curriculum. According to some reports in the Math Educators Stack Exchange, complex numbers are taught in at least some high school level math and science courses in China, Norway, Italy, India, Israel, and the UK.
Proposal
Add support for imaginary numbers in Scientific mode of Windows Calculator.
Goals

Add support for output that includes imaginary numbers (e.g., ‚àö(-16) = 4 i)
Add support for inputting expressions with imaginary numbers (e.g., i2 = -1)
Add i to the keyboard

Non-Goals

Support for imaginary numbers outside of Scientific mode

Low-Fidelity Concept

Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Describe the bug
Upon launch, sometimes, the calculator type title shifts down.  In most calculator types this can cause readability issues when performing some actions.
Steps To Reproduce

Launch Date Calculation calculator
Observe UI
If issue did not occur, repeat steps 1 through 2 multiple times

Observed behavior
Upon launch, sometimes, the calculator type title shifts down
Expected behavior
Upon launch, the calculator UI does not shift down
Screenshots

Device and Application Information

OS Build: 10.0.18362.0
Architecture: X64
Application Version: 10.1906.53.0
Region: en-US
Dev Version Installed: True

Additional context
I can repro quickly by pinning the Calculator app to the taskbar and using middle click to rapidly open several Calculator windows.

Problem Statement
Calculator is great example of Fluent design, but it doesn't feel like my Calculator.

Evidence or User Insights

Adding more color options is a top requested feature on Feedback Hub
Other products, like SwiftKey and the new Windows Terminal, support themes, which are quite popular with users.

Proposal
Add support for custom color and photo themes in Calculator.
Goals

Users can select a custom color theme.
Users can select an image as their theme.

Non-Goals

Fine-grained personalization of individual UI elements

Low-Fidelity Concept

Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Problem Statement
Calculator currently does not have a settings page, which will block future work. The current about dialog is also inconsistent with many other Microsoft apps.
Evidence or User Insights
Many suggested features have suggested adding options in settings (#538, #486, #485, #393, #382, #215), and while we have not accepted all of these pitches, it is inevitable that there will be functionality requiring settings UX.
Proposal
Replace current about dialog with settings page.
Goals

Replace current about dialog with settings page
Be consistent with settings UX patterns established in other Microsoft apps
Add basic theme selection option common across many other apps

Non-Goals

Add any additional options at this time

Low-Fidelity Concept

Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Describe the bug
Users are unable to edit numerical values inserted from memory.
Steps To Reproduce

Perform a calculation in Standard or Scientific mode so that a result is generated
Press "MS" button to store memory entry
Press ESC to clear input
Press "MR" button to recall stored memory entry
Press Backspace and notice that you cannot edit the numerical value

Note: This is only kind of related to #519, but in this case, we are only ever restoring numerical values, and not operators.
Expected behavior
Numerical values are editable as if you typed them in manually.
Screenshots
N/A
Device and Application Information

OS Build: 10.0.18942.0
Architecture: X64
Application Version: 10.1906.25.0
Region: en-US
Dev Version Installed: True

Requested Assignment
I'm just reporting this problem.  I don't want to fix it.

Problem Statement
Today, we treat each converter type as a high-level navigation item. This means that if you want to switch between volume and weight converters, you need to navigate to an entirely different page. While we do offer shortcuts to switch between modes, they are not very discoverable (#157), and parsing a mixed list of calculators and converters is unnecessarily more complex than it needs to be. Furthermore, the converter page interface is laid out differently than other calculator modes and feedback suggests that the interface could be made more intuitive.

Evidence or User Insights
We currently have a flat navigation structure. According to app navigation guidance, this structure is appropriate when there are less than 8 pages in the group. We already have 13 converters, and #515 is looking at evaluating which converters and units we include, and suggests we may actually be missing some converter types (increase to 17). In this case, hierarchical or an alternative navigation would be preferred.
Some other UX issues have been identified as well. It is unclear how to quickly switch units (#172 and #266). There is some additional conversation in #382 and #379 as well.
Proposal
Collapse converters into a single "Converter" page where you can select the type of conversion in addition to the units. There may be an opportunity to streamline input even further with #589 to allow users to input any unit they like without having to explicitly select a converter type first.
Goals

Collapse top-level converter navigation into a single Converter (open question: does currency converter feel different enough to remain separate?)
Redesign page layout for greater consistency with other calculator modes
Redesign value input to align with other converter patterns (e.g., found in translation apps)

Non-Goals

Determining which converters/units to include is out-of-scope (covered by #515)

Low-Fidelity Concept

Bing Translator/Converter UX (for inspiration)


Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Problem Statement
Unit converters in Calculator support a large set of units, which can make it difficult to quickly access common or frequently-used units.
Evidence or User Insights
There is some discussion in #382 regarding having a smaller set of units by default with an option to turn on more in settings. Numerous issues (#108, #167, #271, #325, #275, #515) discuss expanding the set of units or converters further, which improves converters overall, but makes this particular UX problem worse.
Anecdotally, it is clear to see some scenarios where we show common units mixed in with uncommon units:

Proposal
Update the unit selection UX to highlight common and recently-used units and make it easier to find and select units.
Goals

Users can quickly select commonly-used units
Users can quickly select recently-used units
Users can easily find less commonly-used units

Non-Goals

Determining which converters/units to include is out-of-scope (covered by #515)
Redesign any other parts of converter navigation or UX

Low-Fidelity Concept
One approach might be an AutoSuggestBox/ComboBox hybrid experience. This would allow us to highlight the most common units as well as recently used units, while also allowing users to search-to-filter/select any unit.
 
Instead of People/Places/Things, we could highlight common/recently used units

Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Problem Statement
There is no way to navigate to the project from within the Calculator app.
Evidence or User Insights
Proposal
By adding a link to the GitHub repo on the about flyout, people will know that it's open source and that they can create issues, PRs and more.
Goals
Improve discoverability of the GitHub project from within Calculator.
Non-Goals
Low-Fidelity Concept
Add this string to the about dialog after the "Send feedback" button:

Windows Calculator is made available under the MIT license. To learn more and contribute, check out the project on GitHub.


Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Note: Copied/split from #543

Describe the bug
The below example shows a case that shown answer (2) doesn't match the real answer
log(e^2)/log(e)-2 != 0
Steps To Reproduce
Steps to reproduce the behavior:

Go to Scientific mode
enter log(e^2)/log(e^1)-2
See error

Expected behavior
log(e^2)/log(e^1)-2 should be 0 as base changing formula for logarithms:

Screenshots

Device and Application Information

OS Build: 10.0.17134.0
Architecture: X64
Application Version: 10.1905.28.0
Region: zh-CN
Dev Version Installed: False


Additional context
This is a new issue related with #309 and #222
Requested Assignment
I'm just reporting this problem.  I don't know how to fix it.

In several places in Calculator, we disable optimizations to work around bugs in the compiler related to coroutines. Some of these workarounds might no longer be needed (since some bugs have been fixed) while others might be hiding still-unresolved issues that need to be fixed in the compiler.
For every instance where we've disabled optimizations (starting with the one which seems to be new in VS2019) we should produce a minimal repro case which we can send to the C++ team.

Problem Statement

This would let people update to a newer version or get an older version to see if there was a regression. Target audience would be, well, anyone using Calculator.
Evidence or User Insights

For reporting bug fixes and for fixing regressions.
Proposal

By adding appx downloads, people can test for bugs, create suggestions without having to check commits too far. By adding appx downloads, people can do regression tests.
Goals

User can update to latest Microsoft release (includes currency conversion from Bing)
User can update to latest non-Microsoft release
User can install older releases
Non-Goals

Low-Fidelity Concept

Requested Assignment

I'm just suggesting this idea.  I don't want to implement it.

Note: This comment was updated based on conversation below.

Describe the bug
In the date calculator, there are two date picker buttons. Clicking any of them spawns the date picker, but it extends too far down. One can see the rectangle where it should be in, but there are days even below that rectangle. However, no dates can be selected below the rectangle.
Steps To Reproduce

Open the date calculator.
Click a date picker.

Expected behavior
The date picker should remain within its designated rectangle.
Screenshots

Device and Application Information

OS Build: 10.0.18362.145
Architecture: x64
Application Version: 10.1904.31.0
Region: de-DE
Dev Version Installed: No

Requested Assignment
I'm just reporting this problem.  I don't want to fix it.

To enable easier post-mortem debugging from cabs, we should have the GitHub source associated with our pdb's on the symbol server.
For more information, refer to the Azure DevOps documentation for source linking.

Problem Statement
Currently, Calculator executes all operations in immediate mode--press an operator, get a new answer. For multiple scenarios, it would be useful for the user to enter an expression like "(5 + 2) * 3" and have Calculator parse and compute the result.
Evidence or User Insights
Several proposed features could leverage this work:

Expression paste #344 (includes some prototype code which could be useful for this effort)
History editing #163
Input via ink or voice #24, #288
Editing expressions in scientific calculator #520

Proposal
Add code and tests to the calc engine to parse mathematical expressions as strings.
Goals

A developer can use the CalcManager library to convert an expression into a numerical result
Expressions support order of operations, e.g. "(5 + 2) * 3" = 21
Expressions support evaluation of functions, e.g. "sqrt(4)"

Functions are implemented for as many existing calculator operators as possible
Each function has a thoughtful name informed by similar systems


Expressions are evaluated using the arbitrary-precision engine
When invalid expressions are passed to the engine, error information is returned which could be used to construct a helpful error message
Parsing and evaluation is deterministic, and ideally not locale-dependent
The parser can find expressions embedded in natural language sentences with loose syntax (e.g. "what is the square root of sin(3 - 2)" evaluates to "what is the square root of [expression tree]"), for future use in voice input scenarios

Non-Goals

Integrate expression parsing with the Calculator UI (tracked by other issues)
Natural language intent recognition, e.g. "what is the square root of 4" evaluating to "sqrt(4)"

Requested Assignment
I'm happy to help with this, but would be great for someone else to implement.

Problem Statement
Matrix and Vector math can be complicated and hard, but is a vital thing to understand in college-level math for various fields of study, especially computer graphics and artificial intelligence. Having a calculator to help with basic calculations can help users focus on the results and understanding than tedium after initial skills have been learned in class.  By making matrices/vector math more discoverable and easier to process, we can make the skills required for these advanced fields more approachable.
Evidence or User Insights
There are many online matrix calculators available.  Having one available inbox that works offline would be a great benefit, just like #338.
Inspired by this comment on #512.
Proposal

I think these modes are combined as matrix math can lead to a vector which then may want to be manipulated.  They could also have similar interfaces to be shared, so it could make sense for them to overlap.  The keyboard should be contextual anyway and only highlight/enable operations that make sense for the current state of the calculator.
This mode should allow a user to visually set the vector/matrix/matrices size(s) and click with in each cell to enter values (or use number keys and return to enter a value and then proceed to next empty cell or arrow keys to navigate cells).  They should be able to see a single matrix or two matrices to perform operations involving 1 or 2 matrices.
After performing an operation, the matrix display should update to show the resulting matrix/value.  The user should be able to click within their history to also restore the original matrices states from before the operation (i.e. to go back a step and re-perform a different operation).
Goals


 Perform single matrix operations (Transpose, Inverse, Rank, Determinate, Power, etc...)
 Perform two matrix operations (Add, Subtract, Multiple, Divide)
 Work with Vectors and dot/cross product as well
 Able to restore working state from History
 Click in matrix cell to modify value
 Use arrow keys to navigate matrix cells
 Enter matrix values efficiently with keyboard

Non-Goals

Low-Fidelity Concept


Requested Assignment
I'm just suggesting this idea.  I don't want to implement it.

Problem Statement
The proposed feature is to add more comprehensive coverage of categories and units for Converter through some form of integration with newly created or existing online systems.
Calculator provides unit conversions for 13 categories (Currency, Volume, Length, Weight/Mass, Temperature, Energy, Area, Speed, Time, Power, Data, Pressure, Angle) via the main Hamburger Menu. Length has for example selections for 11 units (Nanometer, Microns, Millimeters, Centimeters, Meters, Kilometers, Inches, Feed, Yards, Miles, Nautical Miles) and outputs additional "practical" units in the UI (Paperclips). While the current hard-coded list of conversions in calculator is reasonably extensive, the fixed set of units can quickly reach its limits, in particular when scientific or rare units are required (see evidence below).
Once a user hits a unit conversion limitation, they will likely turn to search engines which generally provide the requested conversions directly from the search box. This slows down the user trying to perform unit conversions (context switch to browser, copy-and-paste of converted results) overall diminishes the value of the unit conversion feature and Calculator in a cloud-connected world.
The goal for this feature is to make the Converter the one-stop-shop for unit conversions, in particular for scientific and educational settings.

Evidence or User Insights

Various gaps have been identified and documented in existing issues:
#275 - month and ns for time
#325 - light years for distance
A Bing query for a unit conversion (https://www.bing.com/search?q=20+F+in+C) shows a "Convert units" dialog with 17 categories (Length, Mass, Temperature, Speed, Volume, Area, Time, Frequency, Angle, Force, Pressure, Energy, Power, Electric Current, Voltage, Resistance, Digital storage, Fuel consumption) which is 4 more than calculator.
The Wikipedia page for Length https://en.wikipedia.org/wiki/Conversion_of_units#Length lists 77 distinct distance units, which is 66 more than calculator.
A Bing query can also support variable conversions such as currency conversions (https://www.bing.com/search?q=20+euro+in+dollar&FORM=AWRE) where the factor changes over time.
Proposal

The related work to modernize the unit conversion architecture:
#379
should consider making Converter fully data driven, and integrate with an online data-source or service so Converter can provide more comprehensive (and daily updatable) conversion tables without binary updates to Calculator itself.
Assuming the existence of an online service which would aggregate and serve existing conversions from online sources (i.e. via an exposed search engine API or code-sharing), add currency services, scrape Wikipedia or other public sources, and allow for curation (to avoid errors), Converter could download and cache a conversion table that is much more comprehensive than the current version.
Goals

User can convert anything that works in a search engine such as "20 dollars into euro" or "1 ly into mm" with Converter.
Non-Goals

Design and implementation of the web-service that aggregates and serves conversion data.
Low-Fidelity Concept

[Online Conversion Sources] + [Curators]  ----web service ---> [Conversion Table Artifact] ---download/update---> [Calculator] ---cache/use---> [Converter UI]
Requested Assignment

I'm just suggesting this idea.  I don't want to implement it.

Describe the bug
If you have more than one instance of Calculator open, which ever instance is not the "original" will lose certain keyboard functions.
For example pressing escape to clear, backspace to backspace and enter to sum. These keyboard keys no longer work on the second instance. I cannot reproduce this 100% of the time. But every time I have encountered this problem, it was when multiple instances were opened. And
Steps To Reproduce

Open calculator
Hold shift and lose focus of the window (easiest way to do this is just to hold shift and left click somewhere outside the window)
Regain focus of the window
Press keys such as enter backspace escape p l x y and probably more

Expected behavior
Keyboard input should be observed no matter how many instances of calculator are open.
Device and Application Information

OS Build: 10     0      17134  0"
Architecture: X64
Application Version: 10.1903.21.0
Region:  en-US
Dev Version Installed: False


Note: A team member edited this comment to clarify steps to reproduce.

Problem Statement
In general, we want to provide "real world" approximations for conversions to help users conceptually grasp the magnitude of the values being displayed while performing unit conversions. However, we do not currently scale these approximations or document them as well as we should.
Evidence or User Insights
The community has identified gaps in our documentation in regards to these units (#120). There is also some confusion around when we decide to show which units (#335).
Proposal
Improve the approximation units we display and how we display them by defining an appropriate scaled set of approximations for each applicable unit converter type and auditing the set of units we display today for accuracy. We should also more thoroughly documenting these units.
Goals

Present representative approximations across all applicable unit converters
Approximations are accurate and scale appropriately with magnitude of inputted values (e.g., maybe we should add "Olympic size swimming pool" for really large volumes)

Non-Goals

None

Low-Fidelity Concept
N/A (we should leverage the existing design).

I loved the old Calculator because it was so quick to just Win, "calc", Enter, and do some quick math.
But now, this process is often super slow because the new Calculator app opens up with the last random mode I was in. Could be Currency, could be Length, doesn't matter. I love that the modes are there, but what I most often want when I open calculator is to do some quick math. It's very rare, if ever at all, that I actually want to do a conversion, and even more rare that I want to do the same exact conversion type that I did last time.
It's especially annoying because switching back to Standard mode is so slow.

Launch "Calculator"
Leave my keyboard
Find my mouse
Click the hamburger button
Scroll up to find Standard
Click on it
Move hand back to keyboard
Finally, Actually do the calculation

Steps 1-6 are super annoying. Please make Standard the default mode. Or at least default to the most recently used normal calculator (i.e. Standard or Scientific).

Problem Statement
Accounting users that utilize traditional desktop calculators often want to default to having 2 digits after a decimal because they are constantly entering currency values.
Evidence or User Insights
Having to enter a period to denote cents adds a great deal of additional data entry throughout the course of a day and is one of the primary barriers to switching from a printer with a paper spool to a computerized calculator.
Proposal
Add a setting to configure the starting position when inputting data. The default would be as it currently works, but setting it to -2 would place it in the hundredths, -3 would be thousandths and 3 would be thousands, etc.
Alternate solution: Add an accounting mode option just as there is a scientific mode option. This option would be designed for users working with currency values regularly.
Goals
Increase user adoption of the calculator by meeting needs of accountants and office workers that deal with currencies regularly.
Low-Fidelity Concept
If the user enters "1" it would display as "0.01"
If the user enters "1" followed by "2" it would display as "0.12"
If the user entered "1 followed by "2" followed by "3" it would display as "1.23"

A team member will update this issue with more details soon.

Describe the bug

This is a complicated visual bug. When the Conversions hamburger menu is open, scrolling to the bottom and using the up arrow, the list will scroll but will not select items. When it gets to the stop, "Standard" will be cut off and the hamburger icon will be selected. Using the down arrow and up arrows will allow any item in the list to be selected. When closing the menu and going back into it, the items select as normal most of the time.
Steps To Reproduce


Open Calculator
Open the hamburger menu, don't click on any items, and scroll to the bottom
Close the hamburger menu
Re-open the hamburger menu
Click on "Standard"
Re-open the hamburger menu, scroll to the bottom
Place your cursor over the last menu item (sometimes this works)
Press the up arrow key many times. Sometimes, it will do nothing, sometimes it will scroll the list but will not select any items.
I have attached a screenshot of what happens when you get to the top.
When the hamburger item is selected, pressing the down arrow will select Standard. This appears to be the only way to select standard when in this state (Standard will not be automatically selected on first-try).

Expected behavior

The arrow keys always select an item, and will not scroll the list without selecting an item. Also, the "Standard" text at the top will not be clipped. The standard item will be selected rather than being clipped, as the hamburger menu is selected.
Screenshots


Device and Application Information (please complete the following information):

OS Build: 10.0.17763.0
Architecture: X64
Application Version: 10.1902.42.0


Additional context

Hovering over the scroll bar while the hamburger menu item is selected, then hover over standard, then pressing down causes the about button to be selected. When pressing up, the hamburger menu item is selected, skipping the other items. It is not possible to select anything else until the mouse is moved.
However, when the last item is selected with the white box (Angle), hovering over the scroll bar and then over to angle, then using the arrow keys selects the next item. I'm not sure if this is intended or not.

Problem Statement
Distance running is a constant interplay between space, time, and pain. Eavesdrop into any discussion between runners, and you‚Äôll be constantly hearing about paces, race times, interval splits, and hitting the wall. Athletes and coaches need to convert between different speed, pace, and race time measures when they are planning their training or races. These conversions are mentally difficult to perform, and even to think of an algorithm for, if the runner is not mathematically inclined.
Evidence or User Insights
A web search can get us a lot of charts and online calculators that try to address this problem, but they usually provide conversions for a small set of data points, and only for a few measurements (usually between minutes per mile and minutes per kilometer paces).
Yet, distance running is an extremely popular sport, and very available to everyone. In 2018, more than 18 million people registered for road races just in the USA (reference). Helping this broad user base around the world easily solve their conversion problems would bring them one step closer to achieving their goals.
Proposal
We propose to introduce a new conversion mode into Windows Calculator that would make these conversions easy for everyone interested in or practicing running.
A typical list of measures would include:

Speed: Miles per hour
Speed: Kilometers per hour
Pace: Minutes per mile
Pace: Minutes per kilometer
Race time: 5K
Race time: 10K
Race time: Half marathon
Race time: Marathon
Intervals: 200m time
Intervals: 400m time
Intervals: 600m time
Intervals: 800m time

Goals
With this mode, a user would be able to solve real world problems such as:

What pace do I need to run to achieve my goal 42:00 time in a 10K race?
My training plan shows paces in minutes per kilometer, but I am using minutes per mile, how can I change them using Windows Calculator?
What speed do I set the treadmill to for my interval workout? The plan specifies paces.
What‚Äôs the target pace for 1‚Äô15‚Äù 400m intervals?
If I could run as fast as Eliud Kipchoge when he achieved his latest Marathon world record, what would my 5K time be? (The right answer is ‚Äúyou probably can‚Äôt‚Äù but the calculator would show 14:24. Wow. I can't think that fast, let alone run.)

Non-Goals
Calculating race times and paces for non-standard race distances, including ultras.
Low-Fidelity Concept

Problem Statement
There are many issues been reported relating to

commas
dots
spaces
...

This is related to the fact that the calculator is used in many international environments. Many users even use data from more than 1 locale in there daily work on 1 system.
Proposal
On the bar above the number display (right above the default value 0) make a language/locale display like it is on the standard widnows language bar. Left clicking on this setting would allow the user to change the locale.
This locale setting would be in effect for the whole application.
Goals
Application can startup in the default locale of the system.
User can change locale, to allow copying, inputing and displaying data in the selected locale.

Pre-Requisite
Turn on High contrast using Settings -> Ease of Access -> High contrast -> High contrast black and white.
Repro Steps

Launch Calculator app.
Navigate to Menu and Select Date calculation.
Select Difference between dates from the combo box.
Navigate to From field and press enter.
Date calendar picker will open
Navigate to Previous, Next and Year buttons.
Observe the issue.


Actual Result
Previous, Next and Year buttons are of blue color in High contrast white theme and of Yellow color in high contrast black theme.
Expected Result
We should be consistent with the default contorl. Previous, Next and Year buttons should be of black color in High contrast white theme and of white color in high contrast black theme. Buttons should have an outline.
Test Environment
OS Version: Windows 10 Build 18351.1
App Name: Calculator
App Version: 10.1902.16.0

Repro Steps

Launch "Calculator" app and Turn on narrator.
Navigate to Menu and select "Programmer"
Navigate to ‚ÄúBit toggling keypad‚Äù radio button and select it.
Navigate to  bit buttons and activate it.
Observe the issue.

Actual Result
Narrator reads Display value and then "1st bit value 1 button on" twice.
Expected Result
Narrator should read Display value and then "1st bit value 1 button on" only once.
Test Environment
OS Version: Windows 10 Build 18351.1
App Name: Calculator
App Version: 10.1902.16.0

Repro Steps

Launch "Calculator" app.
Navigate to "Programmer" window.
Navigate to Selected "Full keypad" and ‚ÄúBit toggling keypad‚Äù radio buttons.
By using color contrast analyzer, verify the luminosity ratio of "Full keypad" and ‚ÄúBit toggling keypad‚Äù buttons.

Note: The same issue is repro for Selected Bit buttons in Bit toggling keyboard window. Please refer attachment.

Actual Result
Luminosity ratio of Selected "Full keypad" and ‚ÄúBit toggling keypad‚Äù radio buttons is 3.6:1.
Expected Result
Luminosity ratio of ‚ÄúSelected "Full keypad" and ‚ÄúBit toggling keypad‚Äù radio buttons should be minimum 4.5:1. We should be using the right AccentColor variant on top of acrylic to ensure legibility.
For example, using the same tool, we can capture the lighter variant the Maps app uses (top is Maps foreground, while bottom is Calculator)

Test Environment
OS Version: Windows 10 Build 18351.1
App Name: Calculator
App Version: 10.1902.16.0

Describe the bug
#360 removed the conditional inclusion of resw files in the project file, but also completely removed the references to pseudo-loc ressw files as they haven't been getting supplied by the localization task.
Pseudo-loc has proven helpful in the past with early identification of localization issues, so we should be fixing the Localization task to generate those resw files, and then adding their references back to the project file.

Problem Statement
There are two flaws with the way the calculator currently manages unit conversions:

it doesn't allow us to support some new scenarios (including some already identified by the community), restricting the possibilities and innovations.
It's obvious, the current code has a long history and some technical choices from the past don‚Äôt make sense anymore, making the code inefficient and challenging to understand/modify.

Here is a proposal to improve how the calculator manages unit conversions, and for clearing the path for new features going forward.
This proposal is a work-in-progress, some of the changes will lead to a big refactoring of a part of the application. Before even starting to modify how unit conversion works, let's list all the future needs we will have, to be sure to suit all of them and let's debate about the different actions in comments. Don't hesitate to share your ideas and feedback, this document will be regularly updated to take into account your suggestions.
Goal
This proposal is a work-in-progress, some of the changes will lead to a big refactoring of a part of the application. Before even starting to modify how unit conversion works, let's debate and list all the future needs we will have to be sure to suit all of them and let's debate about the different actions in comments. Don't hesitate to share your ideas and feedback, this document will be regularly updated to take into account your suggestions.
Proposal
Step 1: Simplify Data Loader + merge Unit and UnitData.
When the user opens one of the converters, UnitConverterViewModel creates a UnitConverter object, hosting 2 Data loaders: UnitConverterDataLoader and CurrencyConverterDataLoader. To simplify our analysis, we can ignore the second data loader, but there are still many issues from the first data loader.
The UnitConverterDataLoader hosts 2 main objects:

A map<CategoryId, vector<Unit>>:

Unit objects containing:

Unit Id
Name (string)
Abbreviation (string)
(+ an order via OrderedUnit)




A list of UnitData:

UnitData objects containing:

Category Id
Unit Id
A Factor (double) representing the value of the unit measured in an unspecified base unit used by all UnitData from the same category.





Even if these 2 collections are static and hosted by the same class, they have data redundancy, with the association Category‚ÜîUnit being defined by the map<CategoryId, Unit> but also by the UnitData.
The only valuable information hosted by UnitData is Factor and we have no reason not to merge Unit and UnitData and create a single object containing all the necessary information to fully describe a unit:



Unit




Unit Id


Name (string)


Abbreviation (string)


Factor  (double)


Offset (double)


AddOffsetFirst (bool)



Step 2a: Get rid of the ratio matrix
When the users open one of the unit converters, UnitConverterDataLoader will, for each category, create a 2D table of all unit combinations from the same category (including pairs of the same unit but also ratio per pairs A->B, B->A) and will calculate the ratio between the 2 units.
For unit conversations, 2996 ratios will be calculated (including 1369 for the category Data) and stored.
When the currency converter is opened or when the user refreshes the currency rates, the application calculates and stores 16,384 ratios, while the user will probably use only 1 or 2 of them.
A ratio is stored by a struct ConversionData, containing 2 doubles and boolean, so a total of 17 bytes for 1 ratio (without counting the overhead of the vector and the map), or 23KB for units and 278KB for currencies!
Now that the calculator is open-sourced, new units will be added, increasing the number of ratios in a category by (Number of units+1)*2 -1).
(very simplified (and not UML compliant) diagram of the current architecture)

Contrary to UnitConverterDataLoader, values of CurrencyConverterDataLoader can be refreshed by the users, again creating a full matrices of 16K objects each time the user clicks on the update rate button.
Based on the high number of calculations (and memory) necessary to build this matrix, this ‚Äúoptimization‚Äù doesn't seem to be one, especially when the conversion from one unit to another is a simple multiplication followed by a division (+ 2 additions if Offset is used), so all these efforts don‚Äôt seem to necessary.
Getting rid of these caches will have a direct impact on performance and memory usage.
Step 2b: UnitConverter shouldn‚Äôt clone data from the 2 data loaders.
Even if UnitConverter has access to data from UnitConverterDataLoader and CurrencyConverterDataLoader, UnitConverter will create and host a full copy of the ratio matrix, categories, and list of units in a category from the 2 data loaders, multiplying the space used by 2.
Instead, UnitConverter should directly use the data from the data loaders and act as a Facade between the ViewModel and the DataLoaders, saving a lot of space and not forcing a useless sync of caches when users refresh currency rates.
Step 3: Units conversions should manage non-linear unit conversions
The application currently only supports linear conversions (ax + b), making it difficult to support some new units.
Some examples of non-linear units:

Sound power: https://en.wikipedia.org/wiki/Sound_power#Sound_power_level
Sound pressure: https://en.wikipedia.org/wiki/Sound_pressure

We already face this issue with Temperature (Celsius, Fahrenheit, ‚Ä¶) forcing us to make some exceptions in the application with custom codes.
The following ticket #347 asks for the support of interval of temperatures, instead of adding more exceptions, we should redesign how the unit conversation between units work.
Instead of using 2 doubles: factor and offset, we should use a pivot unit for each category (already the case, but we must explicitly name the unit used) and add 2 functions to Unit to convert values from and to this pivot unit.



Unit




int Id


string Name


string Abbreviation


double FromPivotUnit(double valueInPivotUnit)


double ToPivotUnit(double value)



The conversion from one unit to another will be possible via the following code:
ToUnit‚ÜíFromPivotUnit(FromUnit‚ÜíToPivotUnit(fromValue))
Some examples:
Length (pivot unit: millimeter) - linear conversion
Centimeter

double FromPivotUnit(double valueInPivotUnit){ return valueInPivotUnit / 10;}
double ToPivotUnit(double value){return valueInPivotUnit * 10;}

Meter

double FromPivotUnit(double valueInPivotUnit){ return valueInPivotUnit / 1000;}
double ToPivotUnit(double value){return value* 1000;}

Temperature (pivot unit: Celsius) - non-linear conversion
Celsius

double FromPivotUnit(double valueInPivotUnit){ return valueInPivotUnit;}
double ToPivotUnit(double value){return value;}

Fahrenheit

double FromPivotUnit(double valueInPivotUnit){ return valueInPivotUnit √ó 9/5 + 32;}
double ToPivotUnit(double value){return (value - 32) * 5 / 9;}

To simplify the code (and because 99% of units will simply use a factor), we can provide a class UnitUsingFactor, inheriting from Unit and implementing FromPivotUnit and ToPivotUnit.
This solution will allow us to support all types of units without excessive effort and restrictions.
Step 4: Add support of multi-part units
The application currently only supports units with a single number. The 2 tickets #243 and #57  require the application to support units with sub-parts. While the pivot unit can still be a double, values should be represented with a double[]:



Unit




int Id


string UnitName


int NumberOfParts


string[] PartNames


string[] PartAbbreviations


double[] FromPivotUnit(double valueInPivotUnit);


double ToPivotUnit(double[]);



Example for Feet+Inches in the category Length (pivot unit: millimeters)



Unit





int Id



string UnitName
‚ÄúFeet+Inches‚Äù


int NumberOfParts
2


string[] PartNames
[‚ÄúFeet‚Äù, ‚ÄúInches‚Äù]


string[] PartAbbreviations
[‚Äú‚Ä≤‚Äù, ‚Äú\‚Äù‚Äù]


double[] FromPivotUnit(double valueInPivotUnit);
return [(int)valueInPivotUnit/304.8, (valueInPivotUnit%304.8)/25.4]


double ToPivotUnit(double[]);
return value[0]*304.8 + value[1]*25.4



The UI will also need to be modified in order to support the display (and the editing) of units with subparts.
Conclusion
Once these changes are complete, the application will be more efficient and will allow opportunities for new scenarios that are currently not possible, but first, let's work all together on the new architecture.
Don't hesitate to give your feedback and debate, this post will be regularly updated to take feedback into account.

When a menu is opened with the keyboard, the choices for the next menu keys should be shown immediately. For example, when you press Alt+H, you should see the choices for next keys you can press. Currently, you don't see anything.
There is a workaround. If you press Alt+H and then press Alt again, you see the next key choices. The extra key press shouldn't be necessary. If the user presses Alt+H, he's going to want to press another key to do something next. Immediately showing the next menu choices goes way back. It's in the Office Ribbon, It's in the standard Windows pull-down menu. It was in pull-down menus in DOS apps like Quick Basic in the 1980s. I image if you dug out a old copy of Lotus 1-2-3, and pressed "/" (it's menu key), it would show you what you could type next there, too. :-)
Device and Application Information:

OS Build: 10.0.17763.0
Architecture: X64
Application Version: 10.1812.10048.0

Repro Steps

Launch Calculator app and Launch narrator
Navigate to Menu and Select Date calculation.
Select Difference between dates from the combo box.
Navigate to From field and press enter.
Date calendar picker will open and select any month by next or previous button.
Now navigate to calendar picker using scan mode (Up arrow key).
Observe the issue.

The same issue repro for To calendar picker and From calendar picker in Add or subtract days.
Actual Result
In scan mode, Narrator is reading "April 10 2019" even though February 2019 is selected when focus lands on the whole control and also reads "Table exit" on another up arrow navigation.
Expected Result
In scan mode, Narrator should read proper information when focus lands on whole calendar picker control such as Calendar picker popup. We should match behavior of standard CalendarDatePicker Control.
Test Environment
OS Version: Windows 10 Build 18351.1
App Name: Calculator
App Version: 10.1902.16.0

Problem Statement
"We wish to limit global temperature rise to 4 degrees Celsius."
The above cannot be converted in calculator to
"We wish to limit global temperature rise to 7.2 degrees Fahrenheit."
Evidence or User Insights
It is acceptable usage to talk about temperature intervals in degrees Celsius and degrees Fahrenheit, and it should be possible to use temperature intervals rather than a specific temperature on the Celsius or Fahrenheit scales.  Failure to make this available will have our poor American colleagues misunderstanding that we are not talking about limiting global temperature rise to 39.2 degrees Fahrenheit!
Proposal
Either:
a) Where there is currently a single option for "Temperature" in the hamburger, have two: Temperature (Interval) or Temperature (Scale).
b) Keep the single option for "Temperature" in the hamburger, then have a separate radio button along the lines of "Interval (referring to the difference between two temperatures)" and "Scale (referring to what temperature an object is)"
My preference would be b).
Goals
Stop people incorrectly converting units when they are talking about a temperature interval.
Non-Goals
We are not submitting a bug to upstream governments to ban the use of Celsius and Fahrenheit.  While we would all eventually get used to saying "it's 270 Kelvin out!", it is more common to know when you are talking about a scale and when you are talking about an interval.

Problem Statement
Calculator only supports English (Western) numeral. If I change my keyboard layout and enter (or paste) Persian numeral, it simply does nothing!
Proposal
Support more numeral systems as input, but show them as English (Western) numeral.
Examples: Hindu‚ÄìArabic numeral system
0 = €∞ 1 = €± 2 = €≤ 3 = €≥ 4 = €¥ 5 = €µ 6 = €∂ 7 = €∑ 8 = €∏ 9 = €π
Goals
I can enter digits with any keyboard layout, pretty fast, no worries.

Repro Steps

Launch Calculator app.
Navigate to Memory list item and open the context menu using Shift + F10 keys or application key.
Navigate to Clear memory item and press enter.
Observe the issue.

Actual Result
Focus moves to "Clear all memory" button after activating "Clear memory item" in first list item.
Expected Result
Focus should move to the next memory item after activating "Clear memory item". For e.g., if first memory item is cleared using "Clear memory item" then focus should move to the second memory item.
App Version: 10.1902.16.0

Describe the bug
The below examples of the trigonometric functions show a correct result at first. However, subtracting that result from itself results in a non-zero value, which shows that the results are represented as incorrect approximations internally, when it should be an exact result.
In DEG mode:
arcsin(1) - 90 != 0
sin(30) - 0.5 != 0
In RAD mode:
sin(œÄ/2) - 1 != 0
but interestingly: cos(¬±œÄ) + 1 == 0
This is a new issue spawned from the similar issue #222.
Steps To Reproduce

Try the above calculations in scientific mode

Expected behavior
Exact internal representation and result 0 for above calculations.
Device and Application Information (please complete the following information):

OS Build: 10 0 17763 0
Architecture: X64
Application Version: 10.1812.10048.0

Mentioned by @jlaanstra in #257:

You can tell the compiler that source is UTF-8 using https://docs.microsoft.com/en-us/cpp/build/reference/utf-8-set-source-and-executable-character-sets-to-utf-8?view=vs-2017
