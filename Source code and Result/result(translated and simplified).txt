166

描述错误

从任何来源复制粘贴到货币中，都会锁定编辑器，无法清除编辑器。
重现的步骤

打开记事本
输入文本 "20.83"，并复制文本。
打开计算器应用，用Ctrl+V粘贴文字。
你看你删除或CE按钮并没有清除任何东西。
预期行为

我希望小编还能继续编辑。复制粘贴后什么都没有发生。
截图


设备和应用信息

OS Build: 10.0.19041.0
架构。X64
应用程序版本: 10.2009.4.0
地区: en-US
已安装的开发版本：假


其他背景

不适用
要求的任务

可能的话，我想解决这个问题。

复制粘贴计算器计算的结果(5.562684646268003457725581793331e-309)给出 "无效输入"。

参见： #1301.

描述这个错误
你启动Windows计算器的任何模式的转换器，不支持负数，然后改变到温度或角度转换器，负数按钮不会弹出。同样，你启动温度或角度模式，该按钮也不会消失。
重现步骤
重现该行为的步骤。

启动Windows计算器（确保它在任何转换器模式下，而不是角度和温度）。
改变模式为温度或角度
查看错误：没有出现负数按钮

预期行为
当你切换模式时，负值按钮出现并相应地折叠。
截图

左：转换器被切换到的实例。右：新的计算器实例，已经在温度页面上。新的计算器实例，已经在温度页面上。
设备和应用信息

操作系统构建。Windows Insider 19042.546
架构：x64
应用程序版本：10.2008.2.0
地区: en-CA
已安装开发版本。已安装

要求的任务
我只是报告这个问题。 我不想修复它。

描述一下这个错误
函数分析中的奇/偶（奇偶性），表示奇函数/偶函数（中文为奇函数/偶函数），误译为奇数/偶数（中文为奇数/偶数）。

重现步骤

转到图形模式
输入任何功能
打开分析选项卡
查看奇偶性标签页 (中文)


预期行为
它是正确的翻译。

截图


设备和应用信息

OS Build: 10.0.19041.0
架构。X64
应用版本：10.2007.1.0
地区: zh-CN
已安装开发版本。False

描述错误
有时候，在图形模式下查看函数的分析时，有些项目可能会因为太长而无法在分析窗口中显示，甚至单个表达式都超过了宽度而无法封装。因此，直接将表达式斩断，让用户无法读取整个表达式。
不过请注意，你还是能够复制整个表达式的。

重现步骤

转到图形模式
输入3x^3+5x^2-7x+1(例如)
点击 "分析功能"。
查看错误

预期行为
3个x轴截取的表达式虽然很长，但完全显示出来。

截图


设备和应用信息

OS Build: 10.0.19041.0
架构。X64
应用版本：10.2007.1.0
地区: zh-CN
已安装开发版本。False


要求的任务

我只是报告这个问题。 我不想修复它。

问题说明

这是改善常用数学公式的可用性的功能需求。
证据或用户洞察力

用户发现自己对一些常见计算的正确公式记忆有问题。
例如，以交叉乘法（和三则）为例，其中有输入2个变量来发现另变量。
建议

我建议创建另名为 "常用计算 "的边栏项目。
这将打开带有组合框的页面，显示常用公式的名称。
通过选择公式，如交叉乘法，速度方程，或质量方程等，用户界面的底部将显示输入框，用户在那里输入值。
通过输入数值，自动计算出结果，如：。

目标
用户能够更快地进行计算，更好地理解公式的结果。
非目标

低保真概念

要求的任务

我只是建议这个想法。 我不想实施它。

复制步骤。

启动计算器程序
打开讲解器。
导航打开导航按钮并激活它。
导航到 "货币转换器 "列表项并激活它。
打开扫描模式，通过方向键导航到文本 "1美元=0.8443欧元"。
观察问题。

实际结果。
在扫描模式下，当焦点导航到 "1美元=0.8443欧元 "信息时，旁白播报两次。
预期的结果。
在扫描模式下，当焦点导航到那里时，叙述者只宣布一次 "1美元=0.8443欧元 "的信息。

先决条件
应添加表达方式。


导航到图形计算器列表项并激活它。
导航到输入表达式编辑框。
输入任何表达式，如 "7+8"。
打开上下文菜单，激活 "分析函数 "按钮并激活它。
分析函数窗格将被打开。
现在按Tab键导航到域值。
观察问题。

实际结果。
当聚焦导航到域名值"⁅𝑥∈ℝ⁆"时，叙述者不宣布该域名值。叙述者只宣布 "扫描关闭"。
预期的结果。
叙述者在焦点导航到那里时宣布域值"⁅𝑥∈ℝ⁆"。

前提条件：。
应添加表达式。
再现步骤。

启动计算器应用。
开启解说器。
导航打开导航按钮并激活它。
导航到图形计算器列表项并激活它。
导航到输入表达式编辑框。
输入任何表达式，如 "7+8"。
现在打开上下文菜单并激活 "删除等式 "按钮。
观察问题。

实际结果。
激活 "删除等式 "按钮后，解说员没有宣布确认。
預期結果：在啟動 "移除等式 "按鈕後，旁白員沒有宣布確認。
激活 "删除等式 "按钮后，解说员宣布确认。

前提条件：需要添加表达式。
添加表达式。
重现步骤：启动计算器程序。

启动计算器应用程序。
打开解说员。
导航打开导航按钮并激活它。
导航到图形计算器列表项并激活它。
导航到输入表达式编辑框。
输入任何表达式，如 "7+8"。
按 "大写字母+空格 "打开叙述器的扫描模式，并箭头键导航。
导航到函数公式上说 "f1"。
观察问题。

实际结果。
在扫描模式下 旁白的焦点分别导航到功能号上。
存在等式 "f1"，则分别聚焦导航到完整的 "f1"，然后导航到数字 "1"。
预期的结果。
在扫描模式下，解说员的焦点不应单独导航到功能编号。
存在等式 "f1"，则焦点只能导航到完整的 "f1"，而不能导航到数字 "1"。

前提条件。
没有历史记录存在。
复制步骤。

启动计算器应用。
导航打开导航按钮并激活。
导航到 "科学计算器 "列表项并激活。
导航到 "历史 "标签项并激活它。
观察问题。

注意：同样的问题也出现在 "记忆 "标签项上。旁白没有宣布 "内存中没有任何保存"。
实际结果。
当没有历史记录时，解说员不会说 "还没有历史记录"
预期的结果。
当那里没有历史时，解说员也应宣布 "还没有历史 "的信息。

复制步骤。

启动计算器应用程序。
导航打开导航按钮并激活它。
导航到'货币转换器'列表项并激活它。
现在转换任何货币价值到另。
导航到'打开导航'按钮并激活它。
现在导航到'音量'转换器列表项并激活它。
观察问题。

注意：所有转换器从转换到另的问题是重现。
实际结果。
当从货币转换器切换到音量时，解说员首先宣布货币信息，然后宣布音量。
预期结果：当从货币转换器切换到音量时，先由解说员宣布货币信息，然后再宣布音量。
当从货币转换器切换到容量时，解说员不公布以前的转换器信息，而只公布现在的转换器信息，即容量。

前提条件
记忆中要有数字。
复制步骤。

启动计算器应用程序。
导航到打开导航按钮并激活它。
导航到 "科学计算器 "列表项并激活。
导航到 "内存调用 "按钮并激活它。
观察问题。

实际结果。
激活 "记忆回忆 "按钮，解说员会播报两次信息。例如，在内存中存储了数字 "256"，那么通过激活 "内存调用 "按钮，解说员会播报两次信息。
预期结果
激活 "记忆调用 "按钮，解说员只播报一次信息。

重复步骤

启动 "计算器 "并打开旁白功能。
将显示主屏幕。
导航打开导航按钮并激活它。
导航到图形计算器列表项并激活它。
导航到输入公式编辑框。
观察问题。

实际结果。
当焦点落在 "输入方程 "编辑框上时，叙述者没有阅读已经输入的方程。
預期結果：敘述者應該讀出已輸入的等式。
当焦点落在 "输入方程 "编辑框上时，叙述者读出已经输入的方程。

重现步骤。

启动 "计算器 "并打开解说员。
将显示主屏幕。
导航打开导航按钮并激活它。
导航到图形计算器列表项并激活它。
导航到缩放控制并激活它。
观察问题。



实际结果。
叙述者在激活图形计算器中的缩放控制后，两次阅读更改通知。
预期结果：在激活图形计算器的变焦控制后，讲述者阅读一次变更通知。
叙述者在激活图形计算器的缩放控制后阅读一次更改通知。

重现步骤。

启动 "计算器 "并打开旁白。
主屏幕将被显示。
导航打开导航按钮并激活它。
导航到科学计算器列表项并激活它。
导航到 "三角学和函数"。
观察问题。

注：此方法适用于所有操作面板按钮。
实际结果。
在计算器中，三角函数和函数按钮的状态被错误地定义为开/关，而不是展开/折叠。
预期结果：在计算器中，三角函数和函数按钮的状态不定义为开/关。
状态不定义为开/关。遵循标准的菜单飞出模式。

复制步骤

启动 "计算器"。
主屏幕将显示。
导航打开导航按钮并激活它。
导航到货币转换器列表项并激活它。
通过色彩对比度分析工具验证 "网络设置 "文本的亮度比。
观察问题。

实际结果。
网络设置 "文本的亮度比为3.6:1，小于4.5:1。
预期结果。
网络设置 "文本的亮度比最低为4.5:1。
应与本链接相同的样式。

问题说明
计算器的用户关闭窗口，将永远失去他们的历史和当前的计算。在（自动）重启后，计算器不会恢复当前的历史和计算。
建议
让扩展当前状态的保存，保存计算器当前的模式，也包括历史和任何当前的计算。并以恢复当前模式的方式来恢复这些。
目标
关闭计算器窗口，然后打开新的窗口，就像用户从来没有关闭过这个窗口一样。
非目标
扩展的、模式跨度大的、多窗口的历史记录不是这里的目的，只是尽可能地恢复窗口状态。
要求的分配
大家对这个感兴趣，我试着去做。但请喜欢这个的人，尽管拿去跑吧。

问题说明
用点来说明不等式，使图形在视觉上很繁杂，我看了会引起不舒服

证据或用户洞察力
关于这个问题，已经有一些反馈意见反馈枢纽。 此外，根据我的个人经验，视觉有时会让人感到不舒服。 这里有一篇关于为什么会发生这种情况的文章，"为什么有些图案和条纹会伤害你的眼睛？"
提议
用纯色、半透明色来说明不等式
目标
的目标是让Windows计算器中的不等式绘图更加舒适和吸引人。
低保真概念

要求的任务
我只是建议这个想法。 我不想实现它。

描述一下这个错误

圆圈没有正确的图形化。你自己看一下。

我让我的朋友们看到，他们看到我所看到的，即圆被图形化为椭圆形
复制的步骤

预期行为

以原点为中心绘制半径为1单位的漂亮小圆。
截图


设备和应用信息

操作系统构建。Windows 10 build 19041.450
架构。X64
应用程序版本: 10.2007.1.0
地区: en-IN
已安装开发版本。False

其他背景

要求的任务
我只是报告这个问题。 我不想修复它，因为我对修复这个东西一窍不通。

这种情况经常发生。图形计算器拒绝接受正确的方程式。例如:

这是简单圆的方程，但计算器拒绝接受。有一天，它拒绝为我绘制y=sin(x)，请尽快解决这个问题。它随机决定不绘制正确的方程。

问题陈述

我想用windows计算器的图形模式来替代其他软件，如GeoGebra Classic。然而，windows calculator中缺乏的功能不允许我这样做。
证据或用户心得

这些功能都在Geogebra Classic中完成，起来略显困难。有原生的windows应用能做到这一点就更好了。作为参考，这是Geogebra Classic的链接：https://www.geogebra.org/classic。
提案

是否添加支持绘制点（例如：A=(x，y)），绘制各种线和线段（例如：垂直线、线段、射线等），以及绘制多边形（同样通过选择顶点）。
学习目标

用户将能够绘制图形的点，创建多边形和线段，就像在流行的几何软件GeoGebra classic中看到的那样。
非目标

这样做并不是为了画形，在图形模式下为了艺术享受而画，主要是为了画几何构造。
低保真概念

截图来自Geogebra。
https://we.tl/t-SMvIkLkBkF




要求的任务

我只是建议这个想法。 我不想实施它。

问题陈述
缺少像 "组合 "和 "排列组合 "这样的统计功能。
证据或用户洞察力
通常高级计算器都有的功能。
提案
增加统计下拉菜单，提供以下功能。

 组合
 与替代产品的组合
 错位
 有替换的排列组合

目标
用户用两个值计算nCr和nPr。
要求的赋值
我只是建议这个想法。 我不想实施它。

问题陈述
目前，当要进行多次计算或涉及多个步骤的计算时，计算器就会滞后。例如，假设我拥有一家生产塑料桶的公司，现在要计算每个桶的装水量，因为有很多不同大小的桶。现在要计算每个桶的盛水量，因为有很多不同大小的桶。所以，我必须计算圆锥形甲壳的体积。计算公式如下。
V((r_1), (r_2)) = 1/3 x π x h x ((r_1)^2 + (r_2)^2 + (r_1)(r_2)), 其中r_1和r_2是圆锥壳的半径。
现在我必须为每水桶的大小反复输入这个困难的公式。这是一项费力的工作。计算器允许我定义自己的函数，我只需要传递不同的值给它就得到所有水桶的体积，那就简单多了。
V(12, 15), V(10,12) 等等。
同样，它也适用于自定义变量，这些变量在很多情况下。例如，假设我希望多次8.85e-12这个数字。现在，我很难一次又一次地输入这个数字。我把它分配给变量，比如说ϵ=8.85e-12，就会更容易。现在我随心所欲地它。
现在所拥有的是计算器内存和一些函数--M+, M-, MR, MC。它是非常有限的，它是非常困难的，它们来完成这些任务。
证据或用户洞察力
正如我在上面所强调的，当必须处理涉及几个步骤的复杂计算或多次计算时，这个功能非常有用。简而言之，它提高了用户的效率。他们不需要切换到Microsoft ® Excel来完成他们的工作。
以下是Excel的制作者对此的评价。

虽然Excel包含了大量的内置工作表功能，但它有可能并没有为你执行的每一种计算提供功能。Excel的设计者不可能预见到每个用户的计算需求。相反，Excel为你提供了创建自定义函数的能力。

礼貌。微软
你在这里阅读更多。
但这并不限于微软Excel。很多计算器都已经有了这个功能。
让以Android版Desmos计算器为例。

Courtesy: Desmos Inc: Desmos Inc
这个局限性在Windows计算器的维基百科页面上也有提到。

它不支持用户定义的函数、复数、中间结果的存储变量（除了袖珍计算器的经典累加器内存）、自动极地-喀斯特坐标转换或支持两个变量统计。

建议
Windows计算器应支持定义自定义变量和函数。这些变量和函数以这样的方式实现，它是容易为用户定义，发现和他们。
用户能够在已有函数的帮助下定义f(...)类型的自定义函数。
下面是一些例子。
f(x) = sin(x) + cos(x)
g(x, y) = xy^2 + yx^2
h(a, b) = (a + b)/2
v(x, y, z) = sin(x) + cos(xy) + sin(z)
用户应能按以下方式它们。
F(π/2)、G(1、2)、H(3、7)、V(π/4、π、π/2)
同样，用户能够定义自定义变量。
a = 5.71
ϕ = 1.61803399
α = tan(15)
现在他们按以下方式。
5a - 4j - 7α
结果是相应的计算。
我想必须对UI进行重大修改才能实现这个功能。
在建议的设置页面的工作完成后，也有设置来保存它们，这样当关闭计算器时，它们就不会丢失。
目标

支持在Windows计算器中定义自定义变量和函数。
在完成复数的实现后，支持将复杂的 


数字到变量。
例如z=-5+7i。

非目标

为计算器增加更多内置功能

低保真概念
在历史和内存之外实现第三类，在这里保存所有定义的变量和函数。用户能够编辑之前定义的变量或函数。
借鉴图形计算器的一些UI代码。对于想要设计的新面板，从图形计算器的方程输入面板中获得灵感。它有两个部分，是变量，另是函数。

要求的作业
我只是建议这个想法。我不想实现它。

描述一下这个错误
在RTL中的图形模式下，一些UI元素会被翻转

预期行为
所有的文本和UI元素都尊重RTL语言。
截图



其他背景
在Reddit上报道
要求的任务
我只是报告这个问题。 我不想修复它。

描述一下这个错误
当打开额外的计算器会话时，发生崩溃，这不是相同的大小和模式的当前，打开的会话。
复制的步骤

在标准模式下启动会话计算器，历史/内存面板不显示。
在剩下的步骤中保留这第1个环节
开设第二届会议
调整第2次会议的大小以显示历史/内存面板。
第二节课切换到另一种计算模式，如Scientific（科学）。
第二届会议闭幕
开设第三届会议
第3次会议的模式恢复到第1次会议的模式，则将第3次会议的模式改为第2次会议关闭前的模式。
第三届会议闭幕
打开第四个会话（没有发生崩溃，打开和关闭其他会话）。

预期行为
计算器不崩溃
设备和应用信息

应用版本: 10.2005.23.0

附加的上下文
复制率： 50%至75%
要求的任务
我只是报告这个问题。 我不想修复它。

问题说明

当你从程序员计算器的十六进制模式中复制数值时，你复制的数值中包含了空格。在大多数编程语言中，十六进制数字之间不支持空格，因此每次在文本编辑器中粘贴该数字时，你必须手动删除它们。
证据或用户洞察力

流行的编程语言不支持中间的空格，比如。C, C++, Python, Rust等。
提议

当你从十六进制计算器中复制时，复制数值时不要有空格。
目标

用户从计算器中复制结果值，不需要每个字的空格。
非目标

不要去掉显示中的空格，它们在读取数值时有帮助。
要求的作业

这个想法被批准，我想尝试在时间段内实现，不能实现，我会通知它，让维护者来处理这个想法。

问题陈述

可能会遇到这样的情况：想把图形保存在图片中，以便插入到其他地方。目前通过剪裁屏幕的方式来实现，也通过邮件或者OneNote中的方式来分享。只是想保存一张图片，就没那么方便了。可编辑的图片文件（如svg/emf）将受益匪浅。
证据或用户洞察力

我记得有产品，Microsoft Mathematics，将图形保存在emf文件中。
提议

在图形上方增加保存按钮。在弹出的窗口中更改文件格式（位图或矢量图）。
目标

非目标

低保真概念

要求的任务

我只是建议这个想法。 我不想实现它。

描述一下BUG。
当尝试绘制不等式 "x < sin(x) "时，计算器应用程序崩溃。
重现步骤：在图形模式下打开计算器。

在图形模式下打开计算器。
输入'x'作为第表达式。
输入'x^2'作为第二个表达式。
输入'x < sin(x)'作为第三个表达式，并按Enter键。



你会发现计算器应用程序崩溃。


注意：计算器应用程序目前无法绘制不等式的类型。

x < sin (x)
sin(x) < cos(x)
cos(x) < sin(x)

预期的行为。
计算器很容易绘制这些不等式，并且在处理这些不等式时不会崩溃。
要求的任务。
我只是在报告这个问题 我不想修复它。


描述一下这个BUG。
有时无法在标题栏菜单最小化后将焦点设置回计算器。这个问题发生在在图形模式下工作时。再次打开应用程序后，甚至无法按下任何按钮。
重现步骤。
这个错误是间歇性的。你可能很难重现这个bug；为了记录少量发生的情况，我重置了这个应用好几次。
有人能够重现这个问题，请留言告诉你的观察结果，以便维护者发现更容易调试。

在图形模式下打开计算器。
在表达式框中，输入不完整的表达式，如下图所示。

x<

或
x=

或
x/

或
x|


右键单击标题栏并选择 "最小化"。



从任务栏中还原应用程序。
你会发现你无法点击任何按钮或文本字段。


预期的行为。
能够将焦点设置为任何按钮或文本字段。
设备和应用程序信息。
操作系统版本：10.0.19041.5 10.0.19041.264
架构：x64
应用版本: 10.2005.23.0
地区：印度 (en-US) 印度 (en-US)
已安装开发版本。没有
要求的任务。
我只是报告这个问题。我不想修复它。

问题说明
为开发模式制作新的图标，类似于计算器的图标（但要加上 "开发 "的旗帜）。
证据或用户洞察力
为了保持一致性，终端开发模式也有这个功能。
建议
有计算器开发图标的变化，但有开发横幅。
要求的任务
我只是提出这个想法。 我不想实现它（我不擅长图像处理）。

描述一下这个错误
计算器应用不支持输入负指数。例如，在科学模式下，输入 "2.6e2 "产生预期的输出260，但试图输入 "2.6e-2 "并没有给出0.026，因为它。我甚至尝试把-2放在括号内，以确保它明白破折号不是用来做减法的，但即使这样也失败了。
重现的步骤

在科学模式下打开计算器应用。
输入 "2.6e-2 "并尝试计算。
报告回来的答案是0.6，而不是预期的0.026。

预期的行为
计算器应用最好支持输入负指数，在科学模式下输入 "2.6e-2 "时，它明白指数符号 "e "后面的破折号不是减法，而是否定的意思。
截图

设备和应用信息

操作系统：Windows 10 Home Insider Preview 单一语言版
OS Build: 10 - 0 -20161 - 0 (20161.rs_prerelease.200627-1754)
架构：x64
应用版本：10.2005.23.0

要求的任务
我只是报告这个问题。 我不想修复它。

问题说明
当公制单位时，看到指数除以3的科学符号是很有用的。数字3,3898e-4不像338.98e-6那样清晰，显然是338.98µ单位。
证据或用户洞察力
你在标准模式或科学模式下尝试 "1/2950="来查看结果。这个问题在#226中也讨论过。
提议
对于公制单位的计算，最好以类似于T、G、M、k、m、µ、n等单位的格式查看结果。
目标
用户能够设置指数分界线，使科学符号更容易阅读。默认值是1，以保持实际状态，并能够启用预定义值3（甚至其他值），以更容易地读取度量结果。
非目标
它并不是为了进行任何形式的单位转换。
低保真概念
exp>0，那么exp=int(exp/div)*div。
if exp<0 then exp=int((exp-div+1)/div)*div
要求的任务
的话，我想实现这个目标。

问题陈述。
计算器应用只允许符号 "csc "来表示余弦三角函数。也允许符号 "cosec "会更好。
证据或用户见解。
许多书籍和网站都用符号'cosec'来表示。这里我引用了其中的一些。
https://en.wiktionary.org/wiki/cosec
http://www.librow.com/articles/article-11/appendix-a-16
其实在印度这样的地区，"cosec "这个名字比 "csc "用得多。
提议。
我有简单的建议. 请允许'csc'和'cosec'在科学以及图形模式的计算器，因为这两个术语是同义词。
目标：请允许在科学计算模式和图形计算模式中'sc和cosec'，因为这两个术语是同义词。
有两个符号来表示余弦三角函数："csc "和 "cosec"，这样当在图形计算器中输入cosec(x)时，它就直接与余弦三角函数相关。
非目标。
低保真概念。
要求的作业。
我只是建议这个功能。我不想实现它。

描述一下BUG。
图形计算器不完全支持f(y)类型的函数。它显示错误，说 "这个函数不能被绘制"。需要明确指定'x='才能正确工作。例如，直接输入'sin (y)'不能工作，但输入'x = sin(y)'正确工作。
意义。
通过图形，研究y的变化，即x的函数相对于x的变化。为此，以变量为独立轴（通常是x轴），以其函数为因轴（通常是y轴）。但有时，需要反过来研究它。
以y=(sin^(-1) (x))为例，也称为arcsin(x)。这个函数改写为x=sin(y)。现在把x当作y的函数。
同样，也有
x = (y - 3)/(y - 1)
这在学习数学中的 "可逆函数 "时特别有用。
重现的步骤。

打开计算器 切换到图形模式。
在表达式框中输入'sin (y)'，然后按Enter键。

你会看到错误，说明这个函数不能被绘制。


关闭所有正在运行的计算器实例，然后再次打开它。
输入第表达式为'x = sin (y)'，然后按Enter键。

这一次，图形计算器能够绘制函数。
预期的行为。
计算器支持f(y)类型的函数，而无需明确指定'x ='。
设备和应用程序信息。
设备和应用程序信息： OS Build：10.0.19041.0 10.0.19041.264
架构：x64
应用版本: 10.2005.23.0
地区：印度(英文-美国) 印度 (EN-US)
已安装开发版本。没有
要求协助。
我只是报告这个问题。我不想修复它。

描述错误。
图形计算器有时会在输入无效间距的表达式时显示模糊的错误。例如，在表达式框中输入'sinx'会显示错误。"'i'和'I'不能用作变量名"。我觉得这个错误在这里没有任何意义。
重现的步骤。

打开计算器 切换到图形模式。
在表达式框中输入'sinx'。

你会看到上面的错误。


清除之前的表达式，输入'sin(x)'并按回车键。

这一次，图形计算器能够绘制函数。
当尝试绘制下面的函数时，每次都会发生同样的情况。
f(x) = sinx + cosx
g(x) = ln(sinx + cosx)
编辑
t(x) = floor(colden(x))
u(x) = xsin(x)
在最后两个函数的情况下，即正确的括号数输入这些函数，也会出现这种错误。但是，当应用内键盘时，就不会出现这种情况。
预期的行为。
计算器自动纠正间距，并随时绘制这些函数。
设备和应用程序信息。
操作系统版本：10.0.19041.0 10.0.19041.264
架构：x64
应用版本: 10.2005.23.0
地区：印度(英文-美国) 印度 (EN-US)
已安装开发版本。没有
要求协助。
我只是报告这个问题。我不想修复它。

描述错误。
图形计算器有时会错误地显示 "表达式为空 "的错误信息。
重现的步骤。

打开计算器。切换到图形模式。
复制以下内容到表达式框中。

sin x +cos x

或
sin x+cosx

你也用键盘输入这个序列。但不要改变间距。
否则你可能看不到错误。
你会看到错误，说明表达式为空。


关闭所有正在运行的计算器实例，然后再次打开它。
输入第表达式为'sin(x)+cos(x)'，然后按Enter键。

这一次，图形计算器能够绘制函数。
编辑
这个错误也发生在以下函数的情况下。
h(x) = sin x/cos x

预期行为：

计算器很容易绘制这个功能。
设备和应用信息。
OS Build：10.0.19041.264 10.0.19041.264
架构：x64
应用版本: 10.2005.23.0
地区：印度(英文-美国) 印度 (EN-US)
已安装开发版本。没有
要求协助。
我只是报告这个问题。我不想修复它。

描述错误。
图形计算器有时会错误地显示 "该函数太复杂，无法绘制 "的错误信息，即使它能够绘制。
重现步骤：。

打开计算器。切换到图形模式。
输入第表达式为'sin (x)'，并按Enter键。
输入第二个表达式为'tan (x)'，并再次按Enter键。

你会看到错误，说明该函数太复杂，无法绘制图形。


关闭所有正在运行的计算器实例，然后再次打开它。
输入第表达式为'tan (x)'，然后按Enter键。

这一次，图形计算器能够绘制函数。
当尝试绘制下面给出的函数时，每次都会发生同样的事情。
f(x) = log(sin(x) + cos(x))
g(x) = cot(x)
h(x) = csc (x)
p(x) = sec (x)
预期行为。
计算器很容易绘制这些功能。
设备和应用程序信息。
OS Build：10.0.19041.264 10.0.19041.264
架构：x64
应用版本: 10.2005.23.0
地区：印度(英文-美国) 印度 (EN-US)
已安装开发版本。没有
要求协助。
我只是报告这个问题。我不想修复它。

描述这个错误
在图形模式下删除方程时，计算器崩溃。
复制的步骤

计算器图形模式
给三个表达式作图，例如：x^2 ，x^3 ，x^4。
点击编辑表达式x^2
点击表达式右边的 "x "来清除它。
在表达式x^3上选择 "删除等式"。
计算器崩溃

预期行为
应删除x^3表达式，留下空表达式和x^4。
设备和应用信息

OS Build: 10.0.19041.0
架构。X64
应用程序版本: 10.2005.23.0
地区: en-GB
已安装开发版本。False

要求的任务
我只是报告这个问题。 我不想修复它。

描述一下这个错误
当悬停在图形线上时，工具提示中的跟踪值字符串没有本地化。可能在不同的语言中，除了逗号之外，还有不同的列表分隔符，特别是当数字用逗号而不是句号来表示小数时。

  
    
      calculator/src/Calculator/Views/GraphingCalculator/GraphingCalculator.xaml.cpp）。
    
    
         247线
      在
      A3163F6
    
    
    
    

        
          
           traceValueString << "(" << FormatTraceValue(xAxisMin, xAxisMax, newPoint.X).str() << ", " << FormatTraceValue(yAxisMin, yAxisMax, newPoint.Y).str() << ")"。
        
    
  


重现的步骤

换一种语言
进入图形模式
绘制一条线，悬停在上面看到跟踪工具提示，注意不是局部的

问题陈述

这是对计算器应用的功能请求，以支持作为游戏栏小部件启动。
证据或用户洞察力

游戏栏为游戏增强工具提供了方便的叠加，而不需要转移焦点离开正在进行的游戏。在许多游戏场景中，玩家可能会计算器，而游戏栏小部件将使这种场景变得简单和容易。
建议

计算器应用将摄取游戏栏SDK支持，作为小部件从游戏栏的上下文中激活。这使得游戏玩家能够在覆盖场景中计算器，而无需在游戏时alt+tab或更改上下文。
目标

用户选择从 "游戏栏 "小组件菜单的上下文中启动计算器应用作为游戏栏小组件。
非目标

低保真概念

一些体验细节。

当从GameBar访问时，图形模式被禁用，而不是隐藏，类似于处理禁用图形功能的策略。在运行不支持的Windows版本的机器上，该模式已经被完全隐藏。
标准模式中 "keep on top "的入口点是隐藏的。
#596完成，尽最大努力尝试采用GameBar模式进行设置，将应用入口点和浮现设置隐藏在单独的窗口中。在不进行重大重构的情况下无法做到这一点，在以后重新考虑这个问题。

要求的任务

可能的话，我希望在计算器团队的设计和评审指导下实现。

描述错误
在图形模式下，在'>'字符后输入'-'字符，会改变>字符，无法绘制图形。
复制的步骤

进入图形模式
输入 "x >-40"
请注意，当你输入'-'字符后，>字符变成了≻字符。

预期行为
等式读作x>-40，但却读作x≻40.我猜想≻是某个数学字符，似乎不直观的RichEditBox会做出这样的改变。我猜测≻是一些数学字符，似乎不直观，RichEditBox会做出这样的改变。更新的代码，只需自动将≻字符替换为>，但这仍然会导致输入会吃掉用户输入的减号。

截图

描述错误
编辑表达式时，分析和方程选项是可用的。
复制的步骤

将键盘焦点放在方程内，以输入表达式。
注意分析和方程选项对用户来说是不可用的。

预期行为
在编辑表达式时，分析和方程选项是可用的。
截图
行动可见。

行动不可用。

设备和应用程序信息

OS Build: 10.0.19042.0
架构。X64
应用程序版本: 10.2005.23.0
地区: en-US
已安装开发版本。False

要求的任务
我只是报告这个问题。 我不想修复它。

描述一下这个错误
有时，对于y=tan(x)，没有计算出拐点和垂直渐变点。
复制的步骤

确保设备已经安装了Twitter应用，并能正常。
启动Windows计算器10.2004.37.0。
导航到图形模式
输入函数/方程，如 "y=tan(x) "到函数输入栏中。
在函数输入栏中调用悬停按钮 "分析函数"(看起来像照明螺栓)
观察拐点计算，垂直渐变点计算。

观察到的行为
拐点和垂直渐变点的计算方法如下。
拐点。这个函数没有任何拐点
垂直渐变。该函数没有任何垂直渐变符。
预期行为
拐点、垂直渐变点的计算方法如下。
拐点：x=𝜋n1，n1∈ℤ。
垂直渐变：x=𝜋n1+𝜋/2，n1∈ℤ。
笔记

有时是在拐点上，但没有计算出来

设备和应用信息

OS Build: 19644.1000
架构。X64
应用程序版本: 10.2004.37.0
地区: en-US
已安装开发版本。True

要求的任务
我在报告这个问题。 我不想修复它。

描述一下这个错误
当添加新的方程式时，第一种颜色的线条颜色循环被破坏了。
复制的步骤

在图形模式下添加几个方程
删除所有方程式
输入新的方程，注意颜色不是默认的方程颜色(蓝色)

预期行为
删除所有等式，下输入的等式的默认值是蓝色。

复制步骤。

启动 "计算器 "应用程序。
将显示主屏幕。
导航到菜单按钮并激活它。
导航到 "图形 "列表项并将其激活。
导航到 "输入表达式 "编辑框。
打开上下文菜单。
观察问题。

实际结果
即户无法对 "剪切"、"复制"、"粘贴 "和 "全选 "按钮进行操作，它们也不会被禁用。
預期結果
用户无法对 "剪切"、"复制"、"粘贴 "和 "全选 "按钮进行操作，则应禁用这些按钮。

重做步骤。

启动 "计算器 "应用。
主屏幕将被显示。
导航到 "菜单 "按钮并激活它。
导航到 "图形 "列表项并激活它。
导航到 "方程 "列表项。
观察问题。

实际结果。
当用户在标签模式下导航到方程时，解说员无法读取方程的位置号。
预期结果：解说员读取方程的位置号。
当用户在标签页模式下导航到方程时，叙述者能读出方程列表项的位置号。

重现步骤。

启动 "计算器 "应用程序。
主屏幕将显示。
导航到菜单按钮并激活它。
导航到 "图形 "列表项并激活它。
导航到 "图形选项 "按钮并将其激活。
导航到 "重置视图 "链接。
通过 "色彩对比度分析器 "工具验证 "重置视图 "链接的亮度比。
观察问题。

实际结果。
重置视图 "链接文本的亮度比为3.7:1，小于4.5:1。
预期结果。
重置视图 "链接文字的发光率最低为4.5:1。由于飞出的背景，利用浅色主题的深色变体和深色主题的浅色变体。

复制步骤。

启动 "计算器 "应用，并打开解说器。
将显示主屏幕。
导航到 "菜单 "按钮并激活它。
导航到 "图形 "计算器并激活它。
导航到 "网格选项 "按钮并激活它。
通过 "可访问性洞察 "工具检查名称属性。
观察问题。

实际结果。
没有为弹出的网格选项定义名称。
預期結果：在彈出的網格選項中沒有定義名稱。
为弹出的网格选项定义名称。

重现步骤。

启动 "计算器 "应用程序，并打开旁白。
将显示主屏幕。
导航到菜单按钮并激活它。
在扫描模式下导航到 "图形 "列表项。
观察问题。

实际结果。
旁白焦点在扫描模式下的 "图形 "列表项上移动了三次。
预期结果：叙述者的焦点在 "图形 "列表项上停留一次。
在扫描模式下，解说员的焦点和其他列表项一样，在 "图形 "列表项上停留一次。

复制步骤。

启动计算器
设置为标准模式
选择AoT按钮
让AoT窗口尽可能的大。
将计算窗口移动到显示器的一侧
调整屏幕对角线的大小

观察结果。
计算窗口移出屏幕，悬停在任务栏的图标上显示黑屏
预期的结果。
计算窗口无法调整大小，进入无法与窗口交互的状态。

描述错误
在平板电脑模式下，计算器的界面向下滑动显示标题栏，而不是将标题栏覆盖在上面。
重现步骤
在平板电脑模式下启动计算器，尝试进入屏幕上方的标题栏，当标题栏出现时，整个界面向下滑动。
重现该行为的步骤。

在平板电脑模式下启动计算器'
进入隐藏在屏幕上方的标题栏。
看到整个界面向下滑动。

预期行为
界面上方应显示标题栏。
截图


设备和应用信息


OS Build: 10.0.19592.0


架构。X64


应用程序版本：10.2001.41.0


地区: en-US


已安装开发版本。False


OS Build: 10.0.19592.0


架构。X64


应用程序版本：10.2001.41.0


地区: en-US


已安装开发版本。False
其他背景



要求的任务

我只是报告这个问题。 我不想修复它。

问题说明
这个计算器不具备计算精确测量中的不确定性的能力。科学家/研究人员需要这些来计算非常精确的测量。

证据或用户洞察力
这将有助于科学家/研究人员/甚至高中科学学生的测量。

提案
创建功能/模式，允许用户输入计算所需的不确定性（绝对/相对）。



低保真概念

例如：
当绝对不确定度相乘时：
(A +- deltaA) (B+-deltaB) = (A乘以B) +- (deltaA/Atimes100%+deltaB/Btimes100%)
(0.050 +-0.001) (9.81 +-0.01) = (0.050+- 9.81) (0.001/0.050乘以100% + 0.01/9.81乘以100%)
= (0.050+- 9.81) +-(2.0000% + 0.10194%)
= (0.050 9.81) +- (2.10194%)
= (0.4905) +- (2.10194%)
= (0.4905) +- (0.010310)
= (0.49) +- (0.01)
这个特征也必须与重要的数字联系起来，因为不确定性和sigfigs密切相关。
要求的分配

我只是建议这个想法。 我不想实施它。

复制步骤。

启动 "计算器
将显示主屏幕。
通过键盘导航菜单，选择'图形'。'图形'计算器打开。
导航到滑块下方的 "扩展 "图标按钮。
色彩对比分析工具验证展开图标按钮的亮度。
观察问题。

实际结果。
展开 "图标按钮的亮度比为2.4:1，小于3:1。
预期结果："展开 "图标按钮的亮度比为2.4:1，小于3:1。
展开 "图标按钮的亮度比最低为3:1。

重做步骤。

启动 "计算器"。
将显示主屏幕。
通过键盘导航菜单，选择 "图形"。'图形'计算器打开。
导航到'网格选项'按钮并激活它。
弹出的图形选项将打开。
导航到编辑字段并填入不正确的值。
色彩对比分析工具验证编辑字段的亮度。
观察问题。

实际结果。
在编辑栏中填入错误的值后，编辑栏边界的亮度比为2.8:1，小于3:1。
预期结果。
在编辑栏中填入错误的值后，编辑栏边界的光度比最小为3:1。为了达到这个目的，不更新文本框的背景色，而是利用SystemControlErrorTextForegroundBrush作为边界色。

复制步骤。

启动 "计算器 "并打开旁白。
将显示主屏幕。
键盘通过菜单导航并选择'图形'。'图形'计算器打开。
导航到'不等式'和'函数'组合框。
观察问题。

实际结果。
在扫描模式下，叙述者的焦点在 "不等式 "和 "函数 "组合框上移动了两次。
预期的结果。
在扫描模式下，叙述者的焦点在 "不等式 "和 "函数 "组合框上停留一次。
注意事项
该问题在整个应用程序中都会出现。同样的问题在项目模式下也会出现。

描述错误
崩溃
复制的步骤

打开计算器
挑选程序员
癸数
计算1<<63（按1，按LSh，按6和3，按=）。
负数
按1
压榨
(所以，你计算(1<<63)-1)
选择结果
右键
全选
右键
拷贝
撞车!

设备和应用信息
微软视窗 [版本 10.0.18363.693]
要求的任务
我只是报告这个问题。我不想修复它。

问题陈述

定义函数的主要用途是用于用它们来定义进一步的函数。这对于可视化、解释和操作复合函数很有帮助，复合函数是数学中的重要概念，横跨所有学科，对学生来说往往是障碍。目前，当在图形模式下定义新的函数时，不能引用以前定义的函数；函数名称被视为常量。
证据或用户心得

实现这一点将使学生和图形计算器的用户能够在其他现有的函数方面定义函数。这是目前大多数，不是所有，竞争者的应用程序，如Desmos，GeoGebra和手持图形计算器上的功能，是快速定义函数族并同时查看它们的重要方法。
目前，用规则来定义函数，并尝试定义.NET，那么，就会发现，这个功能是非常重要的。
得到 "f_1 "的滑块，设置为1，这意味着它被视为常数，而显示的实际上是 , 的图形，其中 。这不是预期的行为。目前的行为请看这里。

提议

假设已经定义了，如上所述，函数与规则 。那么定义 ，计算器意识到 "3次组成的指数函数 "是预期的解释。
那么图示的结果就是 ，正如人们所期望的那样。
为了帮助实现这个目标，除了对正整数k的命名之外，允许函数的命名也是很好的；例如，字母f，g，h，p，q，r等在正确的上下文中被解释为函数名，因为它们之前没有被指定为常数。
函数也在输入后点击函数名进行重命名。(另愿望是，你将图形屏幕保存/共享到可编辑的文件中供以后，但这是另建议。)
目标


用户能够用现有的函数定义新的函数，而且按照预期将其视为函数组合。
这些函数名称应被视为如此，而不是在定义新函数时作为常量。然而，当以这种新的方式定义函数时，现有的/新的常量仍然有效，并且图形根据需要进行更新。
允许在函数名中不同的字母，以便更容易引用之前定义的函数。
最终，为了更好的共享功能，将图形屏幕导出为一种格式，以便以后在计算器应用程序中再次编辑，这样复杂的图形可视化保留，互动和共享。

低保真概念

参见Desmos的实现。

当然，现有的计算器用户界面将被保留，但图形输出如截图所示。这是在计算器应用程序中的模拟，但在.NET中手动定义了所需的输出。

要求的任务

我只是建议这个想法。 我不想实施它。

问题陈述

注意到计算器的新功能后，我看到有很多转换选项。
角度的那个引起了我的注意，现在在度数、弧度和梯度之间进行转换。
还有单位是经常用于角度的，那就是坡度（或坡度）。
虽然这不是用于所有的角度，但在中相当普遍，人们经常会误解其含义。是18度还是%？
除了前面#243和#515的想法，在我看来这也被考虑。
虽然#243可能会被#515吸收，但这个提出的功能请求的解决方案要简单得多，迅速完成，而不必等待#515的实现。
证据或用户洞察力

是的，我敢用维基百科作为资料来源。

在欧洲和美国，百分比 "等级 "是描述斜坡的最常用单位。
资料来源

当然，这个单位是众所周知的（甚至在描述线性图形时也会用到）。
提议

通过在角度选项中添加坡度（或坡度），更容易地将角度从/转换为坡度。
人们更容易地理解其含义，或者简单地在单位之间进行转换，而不会有任何问题!
宗旨

用户轻松无误地在坡度（斜率）和度数、弧度或梯度之间进行转换。
非目标


包括多种形式的等级（百分比、每米、比率）。
如《证据》所示，百分比在欧洲和美国最多。
包括其他不常或定义不清的单位，如军用密尔。


低保真概念

转换很简单，也很容易。

d =运行
Δh=上升
l = 坡长
α = 倾角
在这个例子中，有简单的方法来确定等级百分比（Δh/d*100）。
角度（α）的确定也有几种方法，用余弦、正弦或正切来确定。
将倾角(α)转换为等级百分比的方法是取角(α)的正切值，然后乘以100。
对于大于90度的角度，斜率是不成形的，但角度取模90，仍然定义。
由于实现起来很容易，所以不需要等待#515的实现来增加这个转换。
简而言之，取输入的正切值乘以100，或者除以100，再取正切值，就轻松实现转换。当然，90度是个例外，坡度等级为无穷大，但这很容易被过滤掉。
要求的作业

可能的话，我希望能实现这一点。

一名团队成员将很快更新这个问题，并提供更多细节。

一名团队成员将很快更新这个问题，并提供更多细节。

描述这个错误
图形顶部的按钮会让人分心。
预期行为
图形顶部的按钮在图形悬停/交互时出现，然后在不活动后逐渐消失。不应过于激进。

描述这个错误
您将图像粘贴到方程输入中。
预期行为
是做不到的。
截图

描述错误
共享输出以线性数学输出格式显示方程。
预期行为
数学表达式像MathML风格一样丰富地呈现。
截图

团队成员将很快更新这个问题，提供更多细节。

问题说明
用户今天不能在图上绘制点，只能绘制表达式。
提议
增加支持将坐标对绘制成点(例如，P1=(3,5))
目标
用户绘制（x,y）坐标对。
低保真概念

要求的任务
我只是建议这个想法。 我不想实施它。

团队成员将很快更新这个问题，提供更多细节。

描述这个错误
样式选取器弹出式和方程的上下文菜单之间存在脱节。
预期的行为
上下文菜单以层叠菜单飞出的形式出现。

截图

概要
当输入公式时，在括号后添加小括号时，指数的丰富编辑功能将被打破。
复制步骤

在图形模式下启动计算器。
在函数数据输入栏中，开始输入方程，如：x^2+y^2-1，输入指数：按[Shift]+[6]>按指数数选择>按空格键。输入指数：按[Shift]+[6]>按选择的指数数>按空格键。
在x前面加开口小括号：（x2+y2-1）。
在1后面加封闭的小括号：（x2+y2-1）。
在封闭的小括号里加上指数
观察指数

观察结果
富文本编辑版的指数是不会加到封闭的小括号里的。 由于函数写出来的比较多，富文本版任何附加指数也会被打断。
例如：(x2+y2-1)^3 -x^2 y^3 = 0
预期成果
例如

注
指数可能是个障眼法。我认为这与事后加括号有关。

复制步骤

启动 "旁白"。
启动计算器应用程序。
导航到 "打开导航 "按钮并激活它。
导航到'温度'菜单项并激活它。
'温度'计算器模式将打开。
'Caps+Space'键将叙述者设置为扫描模式。
 "向上/向下箭头 "键导航到 "温度 "计算器模式窗口。

观察问题。
实际结果
在扫描/项目模式下，当从 "转换自... "文本导航到 "主 "地标时，屏幕阅读器焦点导航到背景隐藏元素 "不忙... "进度条。
预期结果
在扫描/项目模式下，当从 "Convert From... "文本导航到 "Main "地标时，屏幕阅读器焦点不应导航到背景隐藏元素 "Not busy... "进度条。

重複步驟

启动 " 计算器 " 应用程序。
启动 "叙述者"。
在导航窗格中导航到 "科学 "控件并激活它。
通过按 "大写+空格 "键打开叙述者的扫描模式。
现在向下箭头键导航到 "功能 "按钮。

观察问题。
实际结果
在扫描模式下，焦点两次导航到功能键。
预期结果
在扫描模式下，焦点只需导航到功能键一次。
观察
对于所有其他按钮，焦点只正确导航一次。

描述一下这个错误
当Narrator的图形模式时，Narrator会在图形/公式模式切换开关用于切换模式后宣布两次状态。
重现步骤

转到图形模式
确保窗口为浓缩形式，显示图形或方程，但不能同时显示。
打开 "叙述者 "并导航到模式改变切换开关。
激活开关以改变模式
旁白："目前的模式是[图形|方程]模式。切换到[方程|图形]模式，拨动开关[关|开]。切换到[方程｜图形]模式，切换开关[关｜开]。"

预期行为
当改变格式时，解说员只需宣布一次 "切换到... "字符串。
截图

设备和应用信息

OS Build: 10.0.19547.0
架构：x64
应用程序版本: 10.1912.4.0
地区: en-US
安装的开发版本。


额外的上下文

要求的任务

我只是报告这个问题。 我不想修复它。

问题说明
为新的绘图模式增加支持，以绘制参数方程。
目标
允许以x=f(t)，y=g(t)的形式绘制方程。
要求的任务
我只是建议这个想法。 我不想实施它。

问题陈述
允许在氩气图中绘出复数和位点。
证据或用户洞察力
这对学生学习复数有很大的好处。这是英国高中生进一步数学教学大纲的一部分，我不清楚其他国家的情况。
目标
允许绘制复数和位点的表格。

x+iy
re^iθ
|z|=r
|z-(a+bi)|=|z-(x+iy)|i

非目标
非目标包括复平面的变换可视化等内容。
要求的作业
我只是建议这个想法。 我不想实施它。

问题陈述
能有一种模式，允许在3d中绘制图形，允许绘制f(x)=g(y)=h(z)形式的线段，以及绘制z=f(x,y)等两变量函数，那就更好了。
证据或用户洞察力
这将有助于可视化和理解三维坐标系以及多变量函数。
目标
允许以下列形式绘制方程。

f(x)=g(y)=h(z)
z=f(x,y)

非目标

球面坐标系
矢量场的绘制
多于两个变量的函数的可视化。

要求的任务
我只是建议这个想法。 我不想实施它。

问题陈述
图形模式不能绘制极性曲线，其形式为r=f(θ)。
目标
允许用户输入公式r=f(θ)
非目标
球面坐标
要求的任务
我只是建议这个想法。 我不想实现它。

计算器10.1906.51.0版本的启动速度比最近的版本快40ms左右。
造成这种退步的主要原因是1906的是WinUI 2.0版本，而后来的版本的是WinUI 2.1或2.2。这很方便验证，因为1906分支的最后一次提交会切换到WinUI 2.0而不是2.1。
如何测量

在x64版本配置中构建计算器应用程序
Visual Studio在本地部署应用程序
我的MeasureAppStartupTime工具反复启动应用程序，并测量达到 "UIResponsive "事件所需的时间。MeasureAppStartupTime.exe -n 30 Microsoft.WindowsCalculator.Dev_8wekyb3d8bbwe!
报告30次发射后的平均时间

结果

Commit 5dcfdd4 (WinUI 2.0): 371ms
Commit 9b7834f (WinUI 2.1): 419ms

我在一台相当高端的酷睿i7-8700台式机上测试，运行Windows 10 Insider Preview Build 19546。不同机器上的绝对性能差异是不同的，但相对差异总是衡量的。
要求的任务
需要帮助。

复制步骤

设置InTune组，配置文件，策略，并将策略分配给配置文件。
在 "添加工作或学校 "的用户设置中，添加步骤1中创建的应用InTune策略的配置文件。
启动图形模式的计算器
尝试进入图形模式

观察结果
在Windows 10X上仍然访问图形计算。
预期结果
图形计算选项是灰色的，就像它在桌面上一样。

计算器是很好的项目，对于刚开始UWP的开发者来说。然而，它是用C++实现的，并带有可管理的扩展，我认为这是一种小众语言，在UI开发的小众领域中具有小众的功能。它是小众中的小众。
我懂C++，但绝不会考虑用这门语言进行UI开发。这艘船在2000年左右就已经起航了。另一方面，微软给我一大笔钱让我用C++开发UI应用，我会认真考虑。那么我会说不。
在C#中计算器项目会让更多的人了解这个项目，也许会对UWP的采用有一定的帮助。
请考虑将这个项目转换为C#。子孙后代会为此感谢你。

问题陈述

做多重转换比在计算中这些，需要在 "计算器模式 "和 "转换模式 "之间来回切换。这就浪费了很多时间，尤其是需要经常混合单位进行计算的时候。

例如，经常用英尺+英寸工作，同时需要用公制公式进行计算。
证据或用户洞察力
我个人的涉及大量转换面板，这通常最终需要用这些数字进行计算。通常情况下，将英制测量值转换为公制，然后在各种公式中这些转换值或与标准进行比较。
建议
有选项，打开转换面板的侧面，而不是在计算器的地方。事实上，旧的windows计算器做到了这一点，这也是我它这么久的原因之一。
目标
用户在进行其他计算任务时进行转换并保持其可见性，这些任务可能会或不会涉及这些比较。
低保真概念
这个计算器，以及转换面板，比起旧的计算器有很强的改进。特别是转换的事实，去两种方式。我真的很欣赏这一点。然而事实上，转换面板和计算面板现在是相互排斥的，这是降级。
要求的作业
我只是提出这个想法。 我没有能力去实现它。

我真的很惊讶，在标准的Windows计算器中没有对基本财务公式的支持。我试图寻找任何相关的Github问题，但没有找到。
提议
创建基本的 "复利计算器"，有无支付。
目标
在基本情况下，允许用户在给定其他三个值的情况下，计算本金/利率/期限/总额中的。
要求的赋值
我想帮助实现这个功能。
有兴趣，我创建带有线框的普通规格。

当应用文本缩放时，文本在长度转换器窗格中没有被调整大小。
复制步骤。
1.从开始菜单启动计算器应用程序。
2.导航到菜单导航按钮存在于左角，应用程序和调用它。
3.现在选择转换器窗格下的长度选项并调用它。
4.长度换算页面，选择 "公里 "作为单位类型的输入字段和输入 "5"，并导航到输出值，现在观察 "约等于值 "文本大小在文本缩放200％。
实际结果
在 "长度转换 "窗格的 "关于等于文本 "和 "显示值 "中，应用200%的文本缩放后，文本没有放大。
预期结果
应用文字缩放时，文字大小增加。
用户影响
文字没有增加，低视力用户将面临困难。

描述这个错误
点击历史标签会导致[Shift]+[Ctrl]+[D]热键断开。
复制的步骤

启动Windows计算器
确保窗口的尺寸足够大，以便历史记录面板。
进行计算

例如：4*5/6=
历史项目填充在历史面板上


点击 "历史 "枢纽按钮。
尝试[Shift] + [Ctrl] + [D]清除历史记录。
查看错误

观察到的行为
[Shift] + [Ctrl] + [D]热键没有影响；当按下这些键时，似乎没有任何事情发生。
预期行为
[Shift] + [Ctrl] + [D]热键清除历史面板。
截图

设备和应用信息

OS Build: 10.0.19505.0
架构。X64
应用版本: 10.1909.1.0
地区: en-US
已安装开发版本。True

其他背景

这导致我的自动测试失败，但经过人工测试才知道为什么这个热键功能会坏掉了
一旦这个功能中断，它就会一直中断，直到应用程序关闭和重新启动为止。
在内存和历史之间浏览时，历史标签会被自然点击，所以这个问题可能会影响到在内存和历史之间切换，然后想热键清除历史面板的用户

要求的任务
我只是报告这个问题。 我不想修复它。

Visual Studio的代码分析工具帮助找到C++代码中的问题。最终，能让这些工具在所有的构建中运行，并修复它们所产生的所有警告，那将是一件好事。
请参阅#689，了解如何在构建过程中启用这些工具。将只在 "Release "配置中启用代码分析，以避免拖慢Debug构建的速度。
要查看哪些警告还需要修复，请检查主分支的最近构建。
最好将不相关的警告的修复提交为单独的PR。当1）所有的C++项目都在开启代码分析规则的情况下进行构建，2）所有由这些工具产生的警告都被修复或沉默时，我将结束这个问题。
问题陈述

在化学相关的工作量中，这三者之间的转换是非常频繁的。因此，有多个在线计算器专门用于此，你输入，然后得到另外两个出来。对于这个计算器中已经存在的输入一输出一的行为，仍然调整。这也符合共同核心的HS-PS4-1。这也是大学化学基础课的一部分。
证据或用户心得


提案

增加光子能量转换器
低保真概念




要求的任务

我只是建议这个想法。 我不想实现它。

描述一下这个错误
在处理能力较低的设备上打开多个会话，'Always on Top'按钮将消失。
复制的步骤

在虚拟机或低处理能力的设备上启动计算器。
重复步骤1约10次
观察有多少会话有 "总是在顶部 "按钮。

少数会话没有 "总是在顶部 "按钮，UI可能会稍微向下移动。
预期行为
无论处理能力如何，"始终在顶部 "按钮始终出现。
截图
所需
设备和应用信息

OS Build: 10.0.18970.0
架构。X64
应用程序版本: 10.1907.24.0
地区: en-US
已安装开发版本。True

要求的任务
我只是报告这个问题。 我不想修复它。

问题说明
有意义的数字（也叫有意义的数字）是科学和数学计算的重要组成部分，涉及到数字的准确性和精确性。估计最终结果的不确定性是很重要的，这就是有意义数字变得非常重要的地方。(来自Wikibooks化学工程)它们通常从高中科学课到现在的大学课都会用到，而且在工程环境中也经常。根据http://www.corestandards.org/Math/Content/HSN/Q/，它也是共同核心标准的一部分（也就是HSN-Q.A.3），所以它说是值得注意支持的。
证据或用户洞察力

已经有各种重要数字计算器了。

单单从结果的数量上就看出对它的需求。
建议

在现有的科学计算器模式中增加支持在计算中重要数字，或增加单独的模式来进行重要数字的计算。
目标


支持美国共同核心数学课程
在Windows计算器中提供伟大的基线重要的数字驱动的计算器经验

低保真概念



用户罐头

在四则运算、平方根、对数等函数时，有意义的数字进行计算。(上述内容都有特殊规则)

要求的任务

我只是建议这个想法。 我不想实施它。

描述一下这个问题
AOT没有与普通模式相同的控件来显示当前值，而是了基于溢出文本的不同控件。
这个控件不是为了这个目的而设计的，在两种模式下相同的控件（更干净，提供更多的功能，更容易支持）。
最初，计算器有2个类似的控件。


CalculationResult

用途：显示数值或错误信息。
用法：显示计算结果或输入的当前值。显示计算结果或输入的当前值。
独特的功能。支持自动调整字体大小，制作成文本块，支持左/右键滚动，支持错误信息，包括改变字体以正确显示信息，支持错误信息的LtR，支持上下文菜单(复制/粘贴数值)
当值发生变化时，控件会自动滚动到最后（为了复制这种行为，OverflowText修改了虚拟机并误用TokenUpdated）。



溢出文本

目的：显示项目控件。
方法 显示当前操作（如：123+243×343）。
独特的功能：提高包含ItemsControl的可访问性。



当比较这2个控件时，很明显，第控件与第二个控件不同，它完全符合的需求。当前的实现试图调整/调整OverflowText的样式，使其看起来像CalculationResult，而直接它。
将如何提高代码质量和用户体验？
CalculationResult将毫不费力地给AOT添加以下功能。

更好的文本大小，目前的实现（通过Calculator.xaml中的可视化状态）只了两种字体大小，一种是大号的，一种是非常小的（见截图）。
支持左/右键
更好的显示错误信息（这个仓库的评论提到在AOT模式下改进这一点，切换到CalculationResult解决这个问题
支持通过上下文菜单进行复制/粘贴。
未来所有对普通视图的改进都将在AOT模式下自动添加。
将能够在不影响AOT模式的情况下改进操作的显示。
性能略微提高，将只用控件而不是两个控件来显示结果。
移除Calculator.xaml中的巨大模板，使代码更容易阅读。
改进了两种模式之间的过渡，在一种模式下选择的文本在另一种模式下仍然会被选择。

截图

目前的实现只支持2种字体大小，不适应AOT支持的所有大小。

错误信息的显示改进
需要做什么？

将#647在溢出文本块中添加的ScrollButtonsPlacement="上方 "模式添加到CalculationResult中。(控件自动调整字体大小，是否需要这样做？)
从Calculator.xaml中删除AlwaysOnTopStyleS、AlwaysOnTopStyleM和AlwaysOnTopResults。
在与AOT相关联的视觉状态下，设置正确的Result.MinFontSize、Result.MaxFontSize的值，以完全适应AOT用户界面。

设备和应用信息

OS Build: 10.0.18875.0
架构。X64
应用程序版本：10.1905.30.0
地区: en-US
已安装开发版本。True

要求的任务
可能的话，我想修复这个问题。

描述一下这个错误
在高对比度模式下，"关于 "菜单项一旦被选中，就无法取消选择。
重现的步骤
在高对比度模式下，"关于 "菜单项一旦被选中，就再也无法取消选择。

在高对比度模式下，打开计算器
点击下拉菜单中的 "关于
试着在其中取消选择或摆脱高亮显示。

预期行为
适当应用高对比度的颜色
截图

设备和应用信息

OS Build: 10.0.18942.0
架构。X64
应用程序版本: 10.1906.53.0
地区: en-US
已安装开发版本。True

要求的任务
我只是报告这个问题。 我不想修复它。

问题说明
今天，当你输入表达式时，你正在用每个操作符提交以前的输入，这意味着你不能轻易地编辑或撤销你已经提交的内容。还有键映射，这样键盘键就会映射到特定的按钮输入。这意味着，要输入 "cos()"，你实际上要按o键，这是不直观的，并使输入方程变得困难。
目前也只支持线性输入，这意味着显示的是这样的。
x ^ 2 + √(2x)
而不是这样。

Evidence or User Insights
目前的键盘映射不直观，需要大量的文档来教育用户(#157)。自由形式输入不仅更直观，而且已经有几个问题需要支持自由形式输入作为先决条件(例如，#163, #519, #150)。
提议
启用自由格式输入，这意味着用户将光标放置在方程输入框内的任何位置来编辑表达式，这也意味着用户输入或粘贴 "cos(x)"，这让人感觉很自然，因为这就是你在白板上写表达式的方式。这也意味着用户输入或粘贴 "cos(x)"，这让人感觉很自然，因为你会在白板上写下这个表达式。

注意：这也是在图形模式下的输入行为。

目标

用户通过自由形式的输入来输入方程
表达式以丰富的MathML样式格式显示。

非目标

构建解析器（这在#526中有所涉及，这是这项工作的先决条件）。
引入键盘以外的新输入法（例如，第24条涵盖了墨水输入）。

低保真概念

只是以MathML形式呈现的例子
要求的任务
我只是建议这个想法。 我不想实施它。

问题陈述
Windows计算器目前不支持虚数。相反，会显示 "无效输入"。

证据或用户洞察力
复数系统是美国高中共同核心课程的一部分。根据数学教育家堆栈交流会的一些报道，在中国、挪威、意大利、印度、以色列和英国，至少在一些高中阶段的数学和科学课程中教授复数。
建议
在Windows计算器的科学模式中增加对虚数的支持。
目标

增加对包括虚数的输出的支持（例如，√(-16) = 4 i）。
增加对输入虚数表达式的支持（例如，i2=-1）。
在键盘上添加i

非目标

支持科学模式以外的虚数

低保真概念

要求的任务
我只是建议这个想法。 我不想实现它。

描述一下这个错误
在启动时，有时计算器类型的标题会向下移动，在大多数计算器类型中，这可能会导致在执行一些操作时的可读性问题。 在大多数计算器类型中，这可能会导致执行某些操作时的可读性问题。
重现步骤

发射日期计算器
观察UI
问题没有发生，请多次重复步骤1至2。

观察到的行为
启动后，有时计算器类型的标题会向下移动。
预期行为
启动后，计算器界面不向下移动。
截图

设备和应用信息

OS Build: 10.0.18362.0
架构。X64
应用程序版本: 10.1906.53.0
地区: en-US
已安装开发版本。True

其他背景
我通过将计算器应用钉在任务栏上，用中键快速打开几个计算器窗口来快速重现。

问题说明
计算器是Fluent设计的好例子，但感觉不像我的计算器。

证据或用户洞察力

增加更多的颜色选择是Feedback Hub上最受欢迎的功能。
其他产品，如SwiftKey和新的Windows终端，都支持主题，颇受用户欢迎。

建议
在计算器中增加对自定义颜色和照片主题的支持。
目标

用户选择自定义颜色主题。
用户选择一张图片作为主题。

非目标

对单个UI元素进行精细的个性化定制。

低保真概念

要求的任务
我只是建议这个想法。 我不想实施它。

问题陈述
计算器目前没有设置页面，这将阻碍未来的工作。当前的关于对话框也与许多其他微软应用程序不一致。
证据或用户洞察力
很多建议的功能都建议在设置中增加选项（#538、#486、#485、#393、#382、#215），虽然没有接受所有这些投稿，但不可避免地会有需要设置用户体验的功能。
提案
将当前的关于对话框替换为设置页面。
目标

将当前关于对话框替换为设置页面
与其他微软应用程序中建立的设置用户体验模式保持一致。
增加基本的主题选择选项，在许多其他应用程序中通用

非目标

此时添加任何其他选项

低保真概念

要求的任务
我只是建议这个想法。 我不想实现它。

描述一下这个错误
用户无法编辑从内存中插入的数值。
重现步骤

在标准模式或科学模式下进行计算，从而生成结果
按 "MS "键存储记忆条目
按ESC清除输入
按 "MR "键，可调用存储的记忆条目。
按退格键，并注意到你不能编辑数值。

注意：这和#519有点关系，但在这种情况下，只还原数值，而不是运算符。
预期的行为
数值是编辑的，就像你手动输入一样。
截图
不适用
设备和应用信息

OS Build: 10.0.18942.0
架构。X64
应用程序版本: 10.1906.25.0
地区: en-US
已安装开发版本。True

要求的任务
我只是报告这个问题。 我不想修复它。

问题说明
今天，将每一种转换器类型视为高级导航项。这意味着，你想在体积和重量转换器之间切换，你需要导航到完全不同的页面。虽然提供了切换模式的快捷键，但它们并不容易被发现(#157)，而且解析混合的计算器和转换器列表比它需要的更复杂。此外，转换器页面的界面布局与其他计算器模式不同，反馈意见认为界面更加直观。

证据或用户见解
目前采用的是扁平化的导航结构。根据应用导航指南，当组内页面少于8页时，这种结构是合适的。已经有13个转换器，#515正在研究评估包括哪些转换器和单位，并建议实际上可能缺少一些转换器类型（增加到17个）。在这种情况下，分层或替代导航将是首选。
其他一些用户体验问题也已经确定。不清楚如何快速切换单位（#172和#266）。在#382和#379中也有一些额外的对话。
提议
将转换器折叠成单一的 "转换器 "页面，除了单位之外，你还选择转换的类型。也许有机会通过#589进一步简化输入，允许用户输入任何他们喜欢的单位，而无需先明确选择转换器类型。
目标

将顶层的转换器导航折叠成单一的转换器（开放性的问题：货币转换器是否有足够的不同感来保持独立？
重新设计页面布局，使其与其他计算器模式更加一致。
重新设计值输入，以便与其他转换器模式保持一致（例如，在翻译应用程序中发现的）。

非目标

确定列入哪些转换器/单位属于范围外(第515条所述)

低保真概念

必应翻译/转换器用户体验(供参考)


要求的任务
我只是建议这个想法。 我不想实施它。

问题陈述
计算器中的单位转换器支持大量的单位集，这使得快速访问常用或经常的单位变得困难。

证据或用户洞察力
在#382中，有一些关于默认情况下有较小的单位集的讨论，并在设置中开启更多的选项。许多问题(#108, #167, #271, #325, #275, #515)讨论了进一步扩大单位或转换器的集合，这改善了转换器的整体，但使这个特定的UX问题变得更糟。
从轶事上看，很明显看到一些场景，在这些场景中显示常见单位与不常见单位混杂在一起。

提议
更新单元选择UX，突出显示常见的和最近的单元，使其更容易找到和选择单元。
目标

用户快速选择常用单位
用户快速选择最近的单元
用户很容易地找到不常用的单位

非目标

确定列入哪些转换器/单位属于范围外(第515条所述)
重新设计转换器导航或用户体验的任何其他部分。

低保真概念
一种方法可能是AutoSuggestBox/ComboBox混合体验。这将允许突出显示最常见的单位以及最近的单位，同时也允许用户搜索到过滤/选择任何单位。
 
突出显示常见的/最近的单元，而不是人/地点/事物。

要求的任务
我只是建议这个想法。 我不想实施它。

问题陈述
没有办法从计算器应用内导航到项目。
证据或用户洞察力
提案
通过在 about flyout 上添加 GitHub repo 的链接，人们就会知道它是开源的，他们创建问题、PR 等。
目标
提高GitHub项目在计算器内的可发现性。
非目标
低保真概念
将此字符串添加到 "发送反馈 "按钮后的关于对话框中。

Windows Calculator是在MIT许可下提供的。要了解更多信息并做出贡献，请查看GitHub上的项目。


要求的任务
我只是建议这个想法。 我不想实施它。

注：抄袭/分割自#543。

描述错误
下面的例子显示了显示的答案(2)与实际答案不一致的情况。
log(e^2)/log(e)-2 !=0。
复制的步骤
重现行为的步骤。

进入科学模式
输入对数(e^2)/log(e^1)-2。
查看错误

预期行为
log(e^2)/log(e^1)-2是0，作为对数的基数变化公式。

截图

设备和应用信息

OS Build: 10.0.17134.0
架构。X64
应用版本: 10.1905.28.0
地区: zh-CN
已安装开发版本。False


其他背景
这是与#309和#222相关的新问题。
要求的任务
我只是报告这个问题。 我不知道如何解决这个问题。

在计算器的几个地方，禁用了优化，以解决编译器中与coroutines相关的bug。其中一些变通方法可能不再需要（因为一些错误已经被修复），而另一些可能隐藏了编译器中需要修复的未解决的问题。
对于每已经禁用优化的实例（从VS2019中似乎是新的实例开始），制作最小的重构案例，将其发送给C++团队。

问题说明

这将让人们更新到较新的版本或得到旧的版本，看看是否有回归。目标受众将是，嗯，任何计算器的人。
证据或用户洞察力

用于报告错误修正和修正回归。
提议

通过添加appx下载，人们测试bug，创建建议，而不用太远的检查提交。通过增加appx下载，人们进行回归测试。
目标

用户更新到最新的微软版本（包括Bing的货币转换）。
用户更新到最新的非微软版本
用户安装旧版本
非目标

低保真概念

要求的任务

我只是建议这个想法。 我不想实施它。

注：此评论根据下面的对话进行了更新。

描述一下这个bug
在日期计算器中，有两个日期选择器按钮。点击其中任何按钮都会产生日期选择器，但它向下延伸得太远。人们看到它在的矩形中，但在这个矩形的下方也有日子。但是，在矩形下面没有日期选择。
重现的步骤

打开日期计算器。
点击日期选择器。

预期行为
日期选择器应保持在指定的矩形内。
截图

设备和应用信息

OS Build: 10.0.18362.145
架构：x64
应用版本: 10.1904.31.0
地区：de-DE
已安装开发版本。没有

要求的任务
我只是报告这个问题。 我不想修复它。

为了能够更容易地从驾驶室进行事后调试，在符号服务器上将GitHub源代码与的pdb关联起来。
有关更多信息，请参阅 Azure DevOps 文档中的源链接。

问题陈述
目前，计算器在即时模式下执行所有的操作--按运算符，得到新的答案。对于多个场景，这将是有用的用户输入表达式，如"(5 + 2) * 3"，让计算器解析和计算结果。
证据或用户洞察力
一些建议的功能利用这项工作。

表达式粘贴#344(包括一些可能对这项工作有用的原型代码)
历史编辑#163
通过墨水或声音输入#24, #288
在科学计算器中编辑表达式 #520

提案
在计算引擎中添加代码和测试，将数学表达式解析为字符串。
目标

开发者CalcManager库将表达式转换为数值结果。
表达式支持运算顺序，如"(5+2)*3"=21。
表达式支持函数计算，例如 "sqrt(4)"。

尽可能多地实现现有计算器运算符的功能。
每个功能都有贴心的名字，从类似的系统中得到启发。


表达式任意精度引擎进行评估。
当无效的表达式被传递给引擎时，会返回错误信息，这些信息用来构造有用的错误信息。
解析和评估是决定性的，最好是不依赖于本地。
该解析器找到嵌入在自然语言句子中的表达式，语法松散（如 "sin(3 - 2)的平方根是多少 "可评价为"[表达树]的平方根是多少"），以便将来在语音输入场景中。

非目标

将表达式解析与计算器用户界面整合在一起（由其他问题跟踪）。
自然语言意图识别，如 "4的平方根是多少 "评价为 "sqrt(4)"

要求的任务
我很乐意帮这个忙，但让别人来实现就好了。

问题陈述
矩阵和矢量数学可能很复杂，也很难，但在大学阶段的各个研究领域的数学中，尤其是计算机图形学和人工智能，是至关重要的东西。有计算器来帮助进行基本计算，帮助用户专注于结果和理解，而不是在课堂上学习了初步技能后的乏味。 通过使矩阵/矢量数学更容易发现和处理，使这些高级领域所需的技能更容易接近。
证据或用户洞察力
有很多在线矩阵计算器可供选择。 有离线的收件箱将是很大的好处，就像#338一样。
受#512的这个评论的启发。
提议

我认为这些模式是结合在一起的，因为矩阵数学导致矢量，然后可能想要进行操作。 它们也有类似的接口来共享，所以它们的重叠是有意义的。 键盘是上下文的，并且只高亮/启用对当前计算器状态有意义的操作。
这种模式允许用户直观地设置向量/矩阵/矩阵的大小，并在每个单元格中点击输入值（或数字键和返回键输入值，然后继续到下空单元格或方向键导航单元格）。 他们能够看到矩阵或两个矩阵，以执行涉及1或2个矩阵的操作。
在执行操作后，矩阵显示更新以显示结果矩阵/值。 用户能够在其历史记录中点击，恢复操作前的原始矩阵状态（即返回步骤，重新执行不同的操作）。
目标


 执行单矩阵运算（转置、反转、排序、确定、幂等...）。
 执行两个矩阵运算（加、减、多、除）。
 也Vectors和点/交叉积。
 从历史中恢复工作状态
 在矩阵单元格中点击修改数值
 方向键浏览矩阵单元
 用键盘有效输入矩阵值

非目标

低保真概念


要求的任务
我只是建议这个想法。 我不想实施它。

问题陈述
建议的功能是通过与新创建的或现有的在线系统进行某种形式的整合，为转换器增加更全面的类别和单位覆盖。
计算器通过主汉堡菜单为13个类别（货币、体积、长度、重量/质量、温度、能量、面积、速度、时间、功率、数据、压力、角度）提供单位转换。例如，长度可选择11个单位（纳米、微米、毫米、厘米、米、公里、英寸、进尺、码、英里、海里），并在用户界面中输出额外的 "实用 "单位（回形针）。虽然目前计算器中的硬编码转换列表是相当广泛的，但固定的单位集很快达到其极限，特别是当需要科学或稀有单位时（见下面的证据）。

一旦用户遇到单位换算限制，他们很可能会转向搜索引擎，而搜索引擎一般会直接从搜索框中提供所要求的换算结果。这减慢了用户试图进行单位换算的速度（上下文切换到浏览器，复制粘贴换算结果），整体上降低了单位换算功能和计算器在云连接世界中的价值。
这个功能的目标是让转换器成为单位转换的一站式服务，特别是在科学和教育环境中。

证据或用户洞察力

在现有的问题中已经发现并记录了各种差距。
#275 -- -- 月份和时间的ns
#325 - 距离的光年
在Bing上查询单位换算（https://www.bing.com/search?q=20+F+in+C），会出现 "转换单位 "对话框，有17个类别（长度、质量、温度、速度、体积、面积、时间、频率、角度、力、压力、能量、功率、电流、电压、电阻、数字存储、燃料消耗），比计算器多了4个。
长度的维基百科页面https://en.wikipedia.org/wiki/Conversion_of_units#Length，列出了77个不同的距离单位，比计算器多了66个。
Bing查询还支持变量换算，比如货币换算（https://www.bing.com/search?q=20+euro+in+dollar&FORM=AWRE），其中的系数会随时间变化。
提议

现代化单位转换架构的相关工作。
#379
考虑使转换器完全由数据驱动，并与在线数据源或服务集成，这样转换器提供更全面的（和每天更新）转换表，而不需要对计算器本身进行二进制更新。
假设存在在线服务，它将聚合和服务于现有的转换从在线来源（即通过暴露的搜索引擎API或代码共享），添加货币服务，刮维基百科或其他公共来源，并允许策划（以避免错误），转换器下载和缓存的转换表，比当前版本更全面。
目标

用户通过转换器将搜索引擎中的任何内容进行转换，如 "20美元换成欧元 "或 "1 ly换成mm"。
非目标

设计和实现聚合和服务转换数据的网络服务。
低保真概念

在线换算源]+[策展人]----web服务-->[换算表工件]--下载/更新-->[计算器]--缓存/-->[换算器界面]。
要求的任务

我只是建议这个想法。 我不想实现它。

描述一下这个错误
你有以上的计算器实例打开，其中任何实例不是 "原始 "将失去某些键盘功能。
例如按escape键清除，按backspace键退格，按enter键求和。这些键盘键在第二个实例上不再工作。我不能100%重现这种情况。但每次我遇到这个问题，都是在打开多个实例的时候。而且
复制的步骤

打开计算器
按住shift键，失去窗口的焦点（最简单的方法就是按住shift键，在窗口外的某处左键点击即可）。
恢复窗口的焦点
按键，如回车键、退格键、转义键、p l x y等，可能还有更多的键

预期行为
无论打开多少个计算器实例，都要注意键盘输入。
设备和应用信息

OS Build: 10 0 17134 0"
架构。X64
应用版本: 10.1903.21.0
地区: en-US
已安装开发版本。False


注：一位团队成员编辑了这条评论，以明确重现的步骤。

问题说明
一般来说，希望提供 "真实世界 "的近似值，以帮助用户在进行单位换算时从概念上掌握所显示的数值的大小。然而，目前并没有将这些近似值进行缩放，也没有将它们记录下来，因为这样做。
证据或用户洞察力
社区已经发现了关于这些单位的文件中的差距（#120）。此外，还有一些关于何时决定显示哪些单元的困惑(#335)。
建议
通过为每个适用的单位转换器类型定义一套适当的比例近似值，并审核今天显示的单位集的准确性，改进显示的近似值单位及其显示方式。还更彻底地记录这些单位。
目标

对所有适用的单位转换器提出有代表性的近似值。
近似值是准确的，并随着输入值的大小而适当扩展（例如，也许为真正的大体积添加 "奥林匹克规模的游泳池"）。

非目标

无

低保真概念
不适用（利用现有的设计）。

我喜欢旧的计算器，因为它是如此之快，只需赢，"计算"，输入，并做一些快速的数学。

但是现在，这个过程经常超级慢，因为新的计算器应用打开的时候，我最后的随机模式。可能是货币，可能是长度，并不重要。我喜欢这些模式，但我打开计算器时最想做的是快速计算。我真的想做转换的话，那是非常少见的，更少见的是我想做和上次一样的转换类型。
这特别令人讨厌，因为切换回标准模式太慢了。

启动 "计算器"
离开我的键盘
找到我的鼠标
点击汉堡包按钮
向上滚动找到标准
点击它
将手移回键盘
最后，实际计算

步骤1-6超级烦人。请将标准模式设为默认模式，或者至少默认为最近的普通计算器（即标准或科学）。或者至少默认为最近的普通计算器（即标准或科学）。

问题陈述
传统桌面计算器的会计用户通常希望默认小数点后有2位数字，因为他们要不断输入货币值。
证据或用户洞察力
必须输入句号来表示美分，这增加了一天中大量额外的数据输入，也是从带纸轴的打印机转为计算机化计算器的主要障碍之一。
建议
增加设置来配置输入数据时的起始位置。默认为目前的工作方式，但设置为-2则为百位数，-3则为千位数，3则为千位数，等等。
备用的解决方案。增加会计模式选项，就像有科学模式选项一样。这个选项是为经常货币价值的用户设计的。
目标
通过满足经常与货币打交道的会计和办公人员的需求，增加用户对计算器的采用。
低保真概念
用户输入 "1"，则显示为 "0.01"
用户输入 "1"，然后输入 "2"，就会显示为 "0.12"
用户输入 "1 "后是 "2 "后是 "3"，则显示为 "1.23"

团队成员将很快更新这个问题，并提供更多细节。

描述错误

这是复杂的视觉bug。当转换汉堡包菜单打开时，滚动到底部并向上箭头，列表将滚动但不会选择项目。当它到达停止时，"标准 "将被切断，汉堡包图标将被选中。向下箭头和向上箭头将允许选择列表中的任何项目。当关闭菜单并回到菜单中时，大多数时候项目选择都是正常的。
重现的步骤


打开计算器
打开汉堡包菜单，不要点击任何项目，然后滚动到最下面。
关闭汉堡包菜单
重新打开汉堡包菜单
点击 "标准"
重新打开汉堡包菜单，滚动到最下面。
将光标放在最后菜单项上（有时会有效）。
多次按向上箭头键。有时，它将什么也不做，有时会滚动列表，但不会选择任何项目。
我附上了一张截图，当你到达顶部时会发生什么。
当汉堡包项目被选中时，按下箭头会选择标准。在这种状态下，这似乎是选择标准的唯一方法（第一次尝试时不会自动选择标准）。

预期行为

方向键总是选择项目，不会在没有选择项目的情况下滚动列表。另外，顶部的 "标准 "文本不会被剪掉。标准项目将被选中而不是被剪掉，因为汉堡包菜单被选中。
截图


设备和应用信息（请填写以下信息）。

OS Build: 10.0.17763.0
架构：X64 X64
应用版本: 10.1902.42.0


附加内容

选择汉堡包菜单项时，将鼠标悬停在滚动条上，然后将鼠标悬停在标准上，再往下按就会选择关于按钮。向上按时，汉堡包菜单项被选中，跳过其他项目。在移动鼠标之前，无法选择其他项目。
但是，当最后项目被白色框（角度）选中时，将鼠标悬停在滚动条上，再悬停在角度上，然后方向键选择下项目。我不知道这是否是有意为之。

问题陈述
长跑是空间、时间和痛苦之间不断的相互作用。偷听跑者之间的任何讨论，你会不断听到关于速度、比赛时间、间歇劈叉和撞墙的话题。运动员和教练在计划训练或比赛时，需要在不同的速度、步幅和比赛时间的衡量标准之间进行转换。这些转换在心理上是很难进行的，跑者没有数学倾向，甚至要想出算法。
证据或用户洞察
通过网络搜索，得到很多试图解决这个问题的图表和在线计算器，但它们通常只提供一小组数据点的换算，而且只针对几个测量值（通常是每英里分钟和每公里步数分钟之间）。
然而，长跑是一项非常受欢迎的运动，而且每个人都非常容易获得。2018年，仅在美国，就有超过1800万人注册参加路跑比赛（参考）。帮助全球这一广泛的用户群体轻松解决他们的转换问题，将使他们离实现目标更近一步。
提案
建议在Windows计算器中引入一种新的转换模式，这将使每个对跑步感兴趣或练习跑步的人很容易进行这些转换。
典型的措施列表将包括。

速度：
速度：公里/小时
速度：每英里分钟
速度：每公里分钟
比赛时间：5公里
比赛时间：10公里
比赛时间 半程马拉松
比赛时间 马拉松
间歇跑：200米时间
间歇跑。400米时间
间歇跑：600米时间
间歇跑：800米时间

目标
通过这种模式，用户将能够解决现实世界中的问题，例如。

我需要跑什么速度才能达到我的目标42:00的时间在10公里比赛？
我的训练计划显示的步速是每公里分钟，但我的是每英里分钟，如何Windows计算器改变它们？
我将跑步机设置为什么速度进行间歇训练？计划规定了速度。
1'15"400米间歇的目标速度是多少？
我能跑得像Eliud Kipchoge取得最新马拉松世界纪录时那样快，我的5K时间会是多少？正确的答案是 "你可能跑不了"，但计算器会显示14:24。哇，我不可能想得那么快。我不能想得那么快，更不用说跑了）。)

非目标
计算非标准比赛距离的比赛时间和速度，包括超声波。
低保真概念

问题陈述
据报道，有许多问题涉及

逗号
点子
空间
...

这与该计算器在许多国际环境中有关。许多用户甚至在日常工作中来自1个以上地区的数据。
建议
在数字显示上方的栏上（默认值0的右上方）做语言/地域显示，就像在标准的widnows语言栏上一样。左键点击这个设置将允许用户改变语言环境.这个语言环境设置将对整个应用程序有效.
这个语言设置将对整个应用程序有效。
目标
应用程序在系统默认的语言环境下启动，用户更改语言环境，允许在选定的语言环境下复制、输入和显示数据。
用户改变语言环境，允许复制、输入和显示所选语言的数据。

前提条件
设置->易如反掌->高对比度->高对比度黑白打开高对比度。
复制步骤

启动计算器应用程序。
导航到菜单并选择日期计算。
从组合框中选择日期差。
导航到 "从 "字段，并按输入。
日期日历选择器将打开
导航到上、下和年份按钮。
观察问题。


实际结果
上一页、下一页、年份按钮采用高对比度白色主题的蓝色，高对比度黑色主题的黄色。
预期效果
与默认的轮廓一致。上一页、下一页和年份按钮在高对比度的白色主题中是黑色，在高对比度的黑色主题中是白色。按钮有轮廓。
测试环境
操作系统版本。Windows 10 Build 18351.1
应用程序名称: 计算器
应用程序版本: 10.1902.16.0

复制步骤

启动 "计算器 "应用，打开旁白。
导航到菜单，选择 "程序员"
导航到 "位臵切换键盘 "单选按钮并选择它。
导航到位按钮并激活它。
观察问题。

实际结果
讲解员读出显示值，然后读出 "1bit值1按钮开启 "两次。
预期结果
讲解员只需读一次 "显示值"，然后读 "1号位值1按钮开启"。
测试环境
操作系统版本。Windows 10 Build 18351.1
应用程序名称: 计算器
应用程序版本：10.1902.16.0


复制步骤

启动 "计算器 "应用。
导航到 "程序员 "窗口。
导航到所选的 "全键盘 "和 "位切换键盘 "单选按钮，通过颜色对比度分析仪，验证 "全键盘 "和 "位切换键盘 "按钮的亮度比。
色彩对比分析器，验证 "全键盘 "和 "位切换键盘 "按钮的亮度比。

注：同样的问题也出现在位切换键盘窗口的 "选择位 "按钮上。请参考附件。

实际结果
选择的 "全键盘 "和 "位切换键盘 "单选按钮的亮度比为3.6:1。
预期效果
选择的 "全键盘 "和 "位切换键盘 "单选按钮的亮度比应至少为4.5:1。在亚克力上面正确的AccentColor变体，以确保可读性。
例如，相同的工具，捕捉到地图应用所的浅色变体（顶部是地图前景，而底部是计算器

测试环境
操作系统版本。Windows 10 Build 18351.1
应用程序名称: 计算器
应用程序版本: 10.1902.16.0

描述错误
#360删除了在项目文件中有条件地包含resw文件，但也完全删除了对伪loc ressw文件的引用，因为它们没有被本地化任务提供。
事实证明，伪loc在过去对早期识别本地化问题很有帮助，所以修正本地化任务来生成这些resw文件，然后将它们的引用添加回项目文件中。

问题说明
目前计算器管理单位换算的方式有两个缺陷，一是不允许支持一些新的方案（包括一些已经由社区确定的方案），限制了可能性和创新。

它不允许支持一些新的方案（包括一些已经被社区确定的方案），限制了可能性和创新。
很明显，目前的代码已经有很长的历史了，过去的一些技术选择已经没有意义了，这使得代码的效率很低，而且理解/修改起来也很困难。

这里有改进计算器管理单位转换的建议，也是为了给未来的新功能扫清道路。
这个建议是正在进行中的工作，其中一些修改将导致应用程序的一部分重构。在开始修改单元转换的工作方式之前，让先列出所有未来的需求，确保适合所有的需求，让在评论中对不同的操作进行辩论。不要犹豫，分享您的想法和反馈，本文档将定期更新以考虑您的建议。
目标
这个建议是正在进行中的工作，有些修改会导致一部分应用的大重构。在开始修改单位转换的工作方式之前，让辩论并列出所有未来的需求，必须确保适合所有的需求，让在评论中辩论不同的行动。不要犹豫，分享你的想法和反馈，本文档将定期更新以考虑你的建议。
建议
第一步：简化数据加载器+合并Unit和UnitData。
当用户打开其中转换器时，UnitConverterViewModel会创建UnitConverter对象，托管2个Data加载器。UnitConverterDataLoader和CurrencyConverterDataLoader。为了简化的分析，忽略第二个数据加载器，但是第数据加载器还是有很多问题。
UnitConverterDataLoader承载了2个主要对象。

map<CategoryId, vector<Unit>>:

单位对象，包含：

Unit Id
姓名(字符串)
缩略语
(+通过OrderedUnit的订单)




UnitData.UnitData对象的列表。

UnitData对象包含：

类别Id
单位编号
Factor(double)，表示同一类别的所有UnitData所的以未指定的基本单位衡量的单位值。





即使这2个集合是静态的，由同类托管，它们也有数据冗余，关联Category↔Unit由map<CategoryId，Unit>定义，但也由UnitData定义。
UnitData托管的唯一有价值的信息是Factor，没有理由不将Unit和UnitData合并，并创建包含所有必要信息的单一对象来完整描述单元。



单元




单位编号


姓名(字符串)


缩略语


因数（双）


偏移(双倍)


添加OffsetFirst (bool)



步骤2a: 摆脱比率矩阵
当用户打开其中单位转换器时，UnitConverterDataLoader将为每个类别创建二维表，其中包含同一类别的所有单位组合（包括同一单位的对子，但也包括每对A->B、B->A的比值），并将计算2个单位之间的比值。
对于单位对话，将计算出2996个比值（包括类别数据的1369个）并存储。

当货币转换器打开或用户刷新货币汇率时，应用程序会计算并存储16384个比率，而用户可能只会其中的1或2个。
比值由ConversionData结构存储，包含2个双数和boolean，所以1个比值总共需要17个字节（不计算向量和映射的开销），也就是说，单位需要23KB，货币需要278KB！所以，比值的存储量是非常大的。
现在计算器已经开源了，将增加新的单位，使一类比值的数量增加（单位数+1）*2 -1）。
(非常简化(不符合UML标准)的当前架构图)

与UnitConverterDataLoader相反，CurrencyConverterDataLoader的值被用户刷新，同样在用户每次点击更新率按钮时，都会创建16K对象的完整矩阵。
基于建立这个矩阵所需的大量计算（和内存），这个 "优化 "似乎并不是，尤其是当从单位转换到另单位时，只是简单的乘法，然后是除法（Offset，则是+2个加法），所以这些努力似乎没有必要。
摆脱这些缓存将直接影响性能和内存的。
步骤2b: UnitConverter不从两个数据加载器中克隆数据。
即使UnitConverter访问UnitConverterDataLoader和CurrencyConverterDataLoader中的数据，UnitConverter也会从2个数据加载器中创建和托管比率矩阵、类别和类别中的单位列表的完整副本，将的空间乘以2。
相反，UnitConverter直接数据加载器中的数据，并作为ViewModel和DataLoaders之间的Facade，这样节省大量的空间，而且当用户刷新货币汇率时，不会强制进行无用的缓存同步。
第三步：单位换算应管理非线性单位换算。
该应用目前只支持线性转换（ax+b），难以支持一些新的单位。
一些非线性单位的例子。

声功率：https://en.wikipedia.org/wiki/Sound_power#Sound_power_level
声压：https://en.wikipedia.org/wiki/Sound_pressure

已经面临这个问题，温度（摄氏度，华氏度，......）迫使在应用程序中自定义代码制造一些异常。
下面的票据#347要求支持温度的间隔，与其增加更多的异常，不如重新设计单位之间的单位对话工作方式。
不2个双数：因子和偏移，而为每个类别枢轴单位（已经是这样了，但必须明确地命名的单位），并在Unit中添加2个函数来将值从这个枢轴单位转换到这个单位。



单位




int Id


串名称


字符串 缩写


double FromPivotUnit(double valueInPivotUnit)


双向透视单位(双值)



通过下面的代码就实现从单位到另单位的转换。
ToUnit→FromPivotUnit(FromUnit→ToPivotUnit(fromValue))
一些例子。
长度（枢轴单位：毫米）--线性换算
公分

double FromPivotUnit(double valueInPivotUnit){返回valueInPivotUnit / 10;}。
double ToPivotUnit(double value){返回valueInPivotUnit * 10;}。

仪表

double FromPivotUnit(double valueInPivotUnit){返回valueInPivotUnit / 1000;}。
double ToPivotUnit(double value){返回value* 1000;}。

温度(枢轴单位: 摄氏度) - 非线性转换
摄氏度

double FromPivotUnit(double valueInPivotUnit){返回valueInPivotUnit;}。
double ToPivotUnit(double value){返回值;}。

华氏度

double FromPivotUnit(double valueInPivotUnit){返回valueInPivotUnit × 9/5 + 32;}。
double ToPivotUnit(double value){返回(value - 32) * 5 / 9;}。

为了简化代码（因为99%的单位都会简单地因子），提供类UnitUsingFactor，继承自Unit并实现FromPivotUnit和ToPivotUnit。
这个解决方案将允许支持所有类型的单位，而无需过多的努力和限制。
步骤4：添加对多部分单位的支持
目前，该应用程序只支持带有单个编号的单元。#243和#57这2个票据要求应用程序支持带有子部分的单位。虽然支点单位仍然是双数，但数值用double[]来表示。



单位




int Id


单位名称字符串


int NumberOfParts


string[] PartNames


string[] PartAbbreviations


double[] FromPivotUnit(double valueInPivotUnit)。


double ToPivotUnit(double[])。



长度类别中的英尺+英寸示例(枢轴单位：毫米)



单位





int Id



单位名称字符串
"英尺+英寸"


int NumberOfParts
2


string[] PartNames
["英尺"，"英寸"]


string[] PartAbbreviations
[“′”, “\””]


double[] FromPivotUnit(double valueInPivotUnit)。
返回[(int)valueInPivotUnit/304.8, (valueInPivotUnit%304.8)/25.4] 。


double ToPivotUnit(double[]);
返回value[0]*304.8 + value[1]*25.4。

为了支持显示（和编辑）有子部件的单位，用户界面也需要修改。
结束语
一旦这些变化完成，应用将更加高效，并将有机会实现目前无法实现的新场景，但首先，让一起在新架构上努力。
不要犹豫，提出你的反馈和辩论，这个帖子会定期更新，以考虑到反馈。

当用键盘打开菜单时，立即显示下菜单键的选择。例如，当你按下Alt+H时，你看到你按的下键的选择。目前，你什么都看不到。
有变通的方法。你按Alt+H然后再按Alt，你就会看到下键的选择。额外的按键是没有必要的。用户按了Alt+H，他就会想按另键来做下一步的事情。立即显示下菜单选择的做法追溯到很久以前。它在Office功能区中，它在标准的Windows下拉菜单中。它在20世纪80年代的DOS应用程序（如Quick Basic）的下拉菜单中也有。我想你挖出旧的Lotus 1-2-3的副本，并按下"/"(它的菜单键)，它也会告诉你下一步输入什么。)
设备和应用信息。

OS Build：10.0.17763.0 10.0.17763.0
架构：X64 X64
应用程序版本：10.1812.10048.0

复制步骤

启动计算器应用程序和启动解说员
导航到菜单并选择日期计算。
从组合框中选择日期差。
导航到 "从 "字段并按输入。
日期日历选择器将打开，通过下或上按钮选择任何月份。
现在扫描模式（向上箭头键）导航到日历选择器。
观察问题。

同样的问题重现到日历选择器和从日历选择器的添加或减少天数。
实际结果
在扫描模式下，当焦点落在整个控件上时，尽管选择了2019年2月，但叙述者读出了 "2019年4月10日"，并且在另向上箭头导航上也读出了 "表退出"。
预期结果
在扫描模式下，当焦点落在整个日历选择器控件（如日历选择器弹出式）上时，叙述者读取正确的信息。匹配标准的CalendarDatePicker控件的行为。
测试环境
操作系统版本。Windows 10 Build 18351.1
应用程序名称: 计算器
应用程序版本：10.1902.16.0。

问题说明
"希望将全球气温上升限制在4摄氏度以内。"
上述内容无法用计算器转换为
"希望将全球气温上升限制在7.2华氏度以内"
证据或用户洞察力
用摄氏度和华氏度来谈论温度区间是接受的用法，温度区间，而不是摄氏度或华氏度尺度上的具体温度。 不能提供这一点，就会让可怜的美国同事误解，不是在说把全球气温上升限制在华氏39.2度以内!
提案
要么
(a) 在汉堡包中目前只有 "温度 "选项的情况下，有两个选项：温度(区间)或温度(刻度)。温度（区间）或温度（刻度）。
b) 在汉堡包中保留 "温度 "的单一选项，然后按照 "区间（指两个温度之间的差异）"和 "标度（指对象的温度）"的思路设置单独的单选按钮。
我的首选是b)。
目标
停止人们在谈论温度区间时错误地换算单位。
非目标
并不是向上游政府提交bug，禁止摄氏度和华氏度。 虽然最终都会习惯于说 "外面是270开尔文！"，但更常见的是知道什么时候在说刻度，什么时候在说区间。

问题陈述
计算器只支持英文（西方）数字。我改变键盘布局，输入(或粘贴)波斯数字，它根本就不支持!
建议
支持更多的数字系统作为输入，但显示为英文（西方）数字。
例子 印度-阿拉伯数字系统
0 = ۰ 1 = ۱ 2 = ۲ 3 = ۳ 4 = ۴ 5 = ۵ 6 = ۶ 7 = ۷ 8 = ۸ 9 = ۹
目标
我用任何键盘布局输入数字，速度相当快，不用担心。

复制步骤

启动计算器应用程序。
导航到内存列表项目，并Shift + F10键或应用程序键打开上下文菜单。
导航到清除内存项目，并按回车键。
观察问题。

实际结果
激活第列表项的 "清除记忆项 "后，焦点移动到 "清除所有记忆 "按钮。
预期结果
激活 "Clear memory item "后，焦点应移动到下记忆项。例如， "清除内存项 "清除了第内存项，那么焦点移动到第二个内存项。
应用程序版本：10.1902.16.0

错误描述
下面的三角函数的例子，一开始就显示出正确的结果。然而，将该结果减去自身，结果是非零值，这表明结果在内部被表示为不正确的近似值，而它是精确的结果。
在DEG模式下。
arcsin(1) - 90 != 0...
sin(30) - 0.5 != 0
在RAD模式下，sin(π/2)-1 !
sin(π/2) - 1 !=0
但有趣的是：cos(±π)+1==0
这是新的问题，产生于类似的问题#222。
重现的步骤

试着用科学模式进行上述计算

预期行为
以上计算的精确内部表示和结果为0。
设备和应用信息（请填写以下信息）。

OS Build: 10 0 17763 0
架构。X64
应用版本：10.1812.10048.0

由 @jlaanstra 在 #257 提到。

你 https://docs.microsoft.com/en-us/cpp/build/reference/utf-8-set-source-and-executable-character-sets-to-utf-8?view=vs-2017 告诉编译器源代码是UTF-8的。
